CCS PCH C Compiler, Version 4.140, 33034               04-Aug-18 21:59

               Filename:   D:\STM32\workspace\gitworks\car\auto_lock&mirror\main.lst

               ROM used:   2760 bytes (67%)
                           Largest free fragment is 1332
               RAM used:   53 (21%) at main() level
                           82 (32%) worst case
               Stack:     7 worst case (4 in main + 3 for interrupts)

*
0000:  GOTO   095A
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   048C
0060:  BTFSS  FF2.4
0062:  GOTO   006C
0066:  BTFSC  FF2.1
0068:  GOTO   00BA
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include "main.h" 
.................... #include <18F1220.h> 
.................... //////// Standard Header file for the PIC18F1220 device //////////////// 
.................... #device PIC18F1220 
.................... #list 
....................  
....................  
.................... #device adc=8 
.................... #FUSES NOWDT,INTRC_IO,NOPUT,NOPROTECT,NODEBUG,NOBROWNOUT,NOLVP,NOCPD,NOMCLR//18F1220 
.................... #use delay(clock=8000000) 
*
076E:  CLRF   FEA
0770:  MOVLW  34
0772:  MOVWF  FE9
0774:  MOVF   FEF,W
0776:  BZ    0792
0778:  MOVLW  02
077A:  MOVWF  01
077C:  CLRF   00
077E:  DECFSZ 00,F
0780:  BRA    077E
0782:  DECFSZ 01,F
0784:  BRA    077C
0786:  MOVLW  97
0788:  MOVWF  00
078A:  DECFSZ 00,F
078C:  BRA    078A
078E:  DECFSZ FEF,F
0790:  BRA    0778
0792:  RETURN 0
.................... #use rs232(baud=9600,parity=N,xmit=PIN_A1,rcv=PIN_A0,bits=8,stream=DEBUG) 
*
042C:  BCF    F92.1
042E:  BCF    F89.1
0430:  MOVLW  08
0432:  MOVWF  01
0434:  BRA    0436
0436:  NOP   
0438:  BSF    01.7
043A:  BRA    0458
043C:  BCF    01.7
043E:  RRCF   41,F
0440:  BTFSC  FD8.0
0442:  BSF    F89.1
0444:  BTFSS  FD8.0
0446:  BCF    F89.1
0448:  BSF    01.6
044A:  BRA    0458
044C:  BCF    01.6
044E:  DECFSZ 01,F
0450:  BRA    043E
0452:  BRA    0454
0454:  NOP   
0456:  BSF    F89.1
0458:  MOVLW  3F
045A:  MOVWF  FE9
045C:  DECFSZ FE9,F
045E:  BRA    045C
0460:  NOP   
0462:  BTFSC  01.7
0464:  BRA    043C
0466:  BTFSC  01.6
0468:  BRA    044C
046A:  RETURN 0
....................  
....................  
.................... #define timing_pro_store 0 
....................  
.................... #define  timer_ex             5 
.................... #define  Pulse_per_around     3 
.................... #define  Tire_perimeter       1.758 
....................  
.................... #define  door_UnLock_C    PIN_A3 
.................... #define  door_Lock_C      PIN_A2 
....................  
.................... #define  Speed_Sig      PIN_B0 
.................... #define  UnLock_SIG     PIN_B1 
.................... #define  Lock_SIG       PIN_B2 
.................... #define  Keep_PWR       PIN_B4 
.................... #define  BT_IO          PIN_B5 
.................... #define  Mirro_open     PIN_A6 
.................... #define  Mirro_close    PIN_A7 
....................  
....................  
.................... #define  ACC_CHECK      PIN_B3 
....................  
.................... #define  disable_blink  disable_interrupts(INT_TIMER0) 
.................... #define  enable_blink   enable_interrupts(INT_TIMER0) 
....................  
.................... //=========================== 
.................... int8 main_st=0,VR=0,SS1=0,adc2; 
.................... int16 led_fre=100; 
.................... unsigned int16 count1=0,count2=0; 
.................... int16 count_msec=0,count_s=timer_ex; 
.................... int1 mirror_st=0; 
.................... int8 count_pulse=0; 
.................... volatile int8 count_keepPWR=0,timekeeping=10,enable_sleeping_flag=0; 
.................... int8 speed=0,repeat_check_speed=0; 
.................... volatile int8 timer_bt=0; 
.................... volatile int8 second_refer=0; 
.................... int1 disable_mirror_button=0; 
.................... int1 door_lock_flag=0; 
.................... int1 bt_flag_h=0; 
.................... int1 bt_flag_l=0; 
.................... //=========================== 
.................... /*  
....................    V = (m/1000)*3600 
....................    m = 3/CV (3 number pulse per around) 
....................    V = ((count_pulse x Tire_perimeter)/Pulse_per_around)x3.6 
....................    V = (count_pulse x 1.7584)/3x3.6 ~ count_pulse*2.1 
.................... */ 
.................... int8 calculate_speed() 
.................... { 
*
0386:  CLRF   3F
....................    int8 result=0; 
....................    result = ((count_pulse*Tire_perimeter)/Pulse_per_around)*3.6; 
0388:  CLRF   41
038A:  MOVFF  29,40
038E:  BRA    00C6
0390:  MOVFF  03,47
0394:  MOVFF  02,46
0398:  MOVFF  01,45
039C:  MOVFF  00,44
03A0:  MOVLW  25
03A2:  MOVWF  4B
03A4:  MOVLW  06
03A6:  MOVWF  4A
03A8:  MOVLW  61
03AA:  MOVWF  49
03AC:  MOVLW  7F
03AE:  MOVWF  48
03B0:  RCALL  00FE
03B2:  MOVFF  00,40
03B6:  MOVFF  01,41
03BA:  MOVFF  02,42
03BE:  MOVFF  03,43
03C2:  MOVFF  03,47
03C6:  MOVFF  02,46
03CA:  MOVFF  01,45
03CE:  MOVFF  00,44
03D2:  CLRF   4B
03D4:  CLRF   4A
03D6:  MOVLW  40
03D8:  MOVWF  49
03DA:  MOVLW  80
03DC:  MOVWF  48
03DE:  BRA    01F0
03E0:  MOVFF  00,40
03E4:  MOVFF  01,41
03E8:  MOVFF  02,42
03EC:  MOVFF  03,43
03F0:  MOVFF  03,47
03F4:  MOVFF  02,46
03F8:  MOVFF  01,45
03FC:  MOVFF  00,44
0400:  MOVLW  66
0402:  MOVWF  4B
0404:  MOVWF  4A
0406:  MOVWF  49
0408:  MOVLW  80
040A:  MOVWF  48
040C:  RCALL  00FE
040E:  MOVFF  03,43
0412:  MOVFF  02,42
0416:  MOVFF  01,41
041A:  MOVFF  00,40
041E:  BRA    034C
0420:  MOVFF  01,3F
....................    return result; 
0424:  MOVFF  3F,01
.................... } 
0428:  GOTO   04AE (RETURN)
.................... //=========================== 
.................... #INT_EXT 
.................... void ext0_isr() 
.................... { 
....................    //fprintf(DEBUG,"ext0_isr %u\r\n, ",count_pulse); 
....................    //delay_us(100); 
....................    if(input(Speed_Sig)==1) count_pulse++;  
*
00BA:  BSF    F93.0
00BC:  BTFSC  F81.0
00BE:  INCF   29,F
.................... } 
.................... //=========================== 
00C0:  BCF    FF2.1
00C2:  GOTO   006C
.................... #int_TIMER0 
.................... void  TIMER0_isr(void)  
.................... { 
*
048C:  CLRF   3E
....................    char temp=0; 
....................    count_msec++; 
048E:  INCF   24,F
0490:  BTFSC  FD8.2
0492:  INCF   25,F
....................    disable_interrupts(INT_EXT); 
0494:  BCF    FF2.4
....................    timer_bt++; 
0496:  INCF   2F,F
....................    if(count_msec>=935) // 1second 
0498:  MOVF   25,W
049A:  SUBLW  02
049C:  BC    04F4
049E:  XORLW  FF
04A0:  BNZ   04A8
04A2:  MOVF   24,W
04A4:  SUBLW  A6
04A6:  BC    04F4
....................    { 
....................       //output_toggle(BT_IO); 
....................       count_msec=0; 
04A8:  CLRF   25
04AA:  CLRF   24
....................       speed = calculate_speed(); 
04AC:  BRA    0386
04AE:  MOVFF  01,2D
....................       //fprintf(DEBUG,"speed = %u, pulse = %u\r\n, ", speed,count_pulse); 
....................       count_pulse=0; 
04B2:  CLRF   29
....................       if(speed>20)  
04B4:  MOVF   2D,W
04B6:  SUBLW  14
04B8:  BC    04BE
....................       { 
....................          disable_mirror_button = 1; 
04BA:  BSF    28.1
....................       } 
....................       else 
04BC:  BRA    04C0
....................       { 
....................          disable_mirror_button = 0; 
04BE:  BCF    28.1
....................       } 
....................       second_refer++; 
04C0:  INCF   30,F
....................       if(count_s<timer_ex)  
04C2:  MOVF   27,F
04C4:  BNZ   04D2
04C6:  MOVF   26,W
04C8:  SUBLW  04
04CA:  BNC   04D2
....................       { 
....................          count_s++; 
04CC:  INCF   26,F
04CE:  BTFSC  FD8.2
04D0:  INCF   27,F
....................          //fprintf(DEBUG,"Timer overflow %lu\r\n, ",count_s); 
....................          //output_high(Mirro_close); 
....................       } 
.................... 	  if(enable_sleeping_flag==1) 
04D2:  DECFSZ 2C,W
04D4:  BRA    04F4
.................... 	  { 
.................... 		  if(count_keepPWR<timekeeping) 
04D6:  MOVF   2B,W
04D8:  SUBWF  2A,W
04DA:  BC    04E6
.................... 		  { 
.................... 			  count_keepPWR++; 
04DC:  INCF   2A,F
.................... 			  fprintf(DEBUG,"."); 
04DE:  MOVLW  2E
04E0:  MOVWF  41
04E2:  RCALL  042C
.................... 		  } 
.................... 		  else 
04E4:  BRA    04F4
.................... 		  { 
.................... 			  fprintf(DEBUG,"\r\nPower off\r\n"); 
04E6:  MOVLW  FC
04E8:  MOVWF  FF6
04EA:  MOVLW  04
04EC:  MOVWF  FF7
04EE:  RCALL  046C
.................... 			  output_low(Keep_PWR); 
04F0:  BCF    F93.4
04F2:  BCF    F8A.4
.................... 		  } 
.................... 	  } 
....................    } 
....................    enable_interrupts(INT_EXT); 
04F4:  BSF    FF2.4
.................... } 
.................... //=========================== 
04F6:  BCF    FF2.2
04F8:  GOTO   006C
.................... void sleeping(int8 insec) 
.................... { 
.................... 	fprintf(DEBUG,"\r\nPower will to turn off in %ds\r\n",insec); 
*
06E2:  MOVLW  0A
06E4:  MOVWF  FF6
06E6:  MOVLW  05
06E8:  MOVWF  FF7
06EA:  MOVLW  1C
06EC:  MOVWF  35
06EE:  RCALL  05B4
06F0:  MOVFF  34,35
06F4:  MOVLW  18
06F6:  MOVWF  36
06F8:  BRA    0606
06FA:  MOVLW  28
06FC:  MOVWF  FF6
06FE:  MOVLW  05
0700:  MOVWF  FF7
0702:  MOVLW  03
0704:  MOVWF  35
0706:  RCALL  05B4
.................... 	timekeeping = insec; 
0708:  MOVFF  34,2B
.................... 	count_keepPWR = 0; 
070C:  CLRF   2A
.................... 	enable_sleeping_flag = 1; 
070E:  MOVLW  01
0710:  MOVWF  2C
.................... } 
0712:  RETURN 0
.................... //=========================== 
.................... void sleeping_disable() 
.................... { 
.................... 	enable_sleeping_flag = 0; 
*
05AC:  CLRF   2C
.................... 	count_keepPWR = 0; 
05AE:  CLRF   2A
.................... } 
05B0:  GOTO   071C (RETURN)
.................... //=========================== 
.................... void door_lock() 
.................... { 
....................    if(door_lock_flag==0) 
*
08B0:  BTFSC  28.2
08B2:  BRA    08CC
....................    { 
....................       output_high(door_Lock_C); 
08B4:  BCF    F92.2
08B6:  BSF    F89.2
....................       delay_ms(500); 
08B8:  MOVLW  02
08BA:  MOVWF  33
08BC:  MOVLW  FA
08BE:  MOVWF  34
08C0:  RCALL  076E
08C2:  DECFSZ 33,F
08C4:  BRA    08BC
....................       output_low(door_Lock_C); 
08C6:  BCF    F92.2
08C8:  BCF    F89.2
....................       door_lock_flag=1; 
08CA:  BSF    28.2
....................    } 
.................... } 
08CC:  GOTO   0A62 (RETURN)
.................... //=========================== 
.................... void door_unlock() 
.................... { 
....................    if(door_lock_flag==1) 
*
07E6:  BTFSS  28.2
07E8:  BRA    0802
....................    { 
....................       output_high(door_UnLock_C); 
07EA:  BCF    F92.3
07EC:  BSF    F89.3
....................       delay_ms(500); 
07EE:  MOVLW  02
07F0:  MOVWF  33
07F2:  MOVLW  FA
07F4:  MOVWF  34
07F6:  RCALL  076E
07F8:  DECFSZ 33,F
07FA:  BRA    07F2
....................       output_low(door_UnLock_C); 
07FC:  BCF    F92.3
07FE:  BCF    F89.3
....................       door_lock_flag=0; 
0800:  BCF    28.2
....................    } 
.................... } 
0802:  GOTO   0A44 (RETURN)
.................... //=========================== 
.................... int8 open_mirror_remote() 
.................... { 
*
0714:  CLRF   33
....................    int8 result = 0; 
....................    count_s = 0; 
0716:  CLRF   27
0718:  CLRF   26
....................    sleeping_disable(); 
071A:  BRA    05AC
....................    fprintf(DEBUG,"open_mirror_remote\r\n, "); 
071C:  MOVLW  2C
071E:  MOVWF  FF6
0720:  MOVLW  05
0722:  MOVWF  FF7
0724:  CLRF   19
0726:  BTFSC  FF2.7
0728:  BSF    19.7
072A:  BCF    FF2.7
072C:  RCALL  046C
072E:  BTFSC  19.7
0730:  BSF    FF2.7
....................    while(count_s<timer_ex) 
....................    { 
0732:  MOVF   27,F
0734:  BNZ   0764
0736:  MOVF   26,W
0738:  SUBLW  04
073A:  BNC   0764
....................       if((input(Lock_SIG)==1)&&(input(UnLock_SIG)==0)) 
073C:  BSF    F93.2
073E:  BTFSS  F81.2
0740:  BRA    075C
0742:  BSF    F93.1
0744:  BTFSC  F81.1
0746:  BRA    075C
....................       { 
....................          result = 1; 
0748:  MOVLW  01
074A:  MOVWF  33
....................          output_low(Mirro_open);		 
074C:  BCF    F92.6
074E:  BCF    F89.6
.................... 		 sleeping(10); 
0750:  MOVLW  0A
0752:  MOVWF  34
0754:  RCALL  06E2
....................          return result; 
0756:  MOVFF  33,01
075A:  BRA    076C
....................       } 
....................       output_high(Mirro_open); 
075C:  BCF    F92.6
075E:  BSF    F89.6
....................       mirror_st = 1; 
0760:  BSF    28.0
....................    } 
0762:  BRA    0732
....................    output_low(Mirro_open); 
0764:  BCF    F92.6
0766:  BCF    F89.6
....................    return result; 
0768:  MOVFF  33,01
.................... } 
076C:  RETURN 0
.................... //========================== 
.................... int8 close_mirror_remote() 
.................... { 
*
0794:  CLRF   33
....................    int8 result = 0; 
....................    count_s = 0; 
0796:  CLRF   27
0798:  CLRF   26
....................    fprintf(DEBUG,"close_mirror_remote\r\n, "); 
079A:  MOVLW  44
079C:  MOVWF  FF6
079E:  MOVLW  05
07A0:  MOVWF  FF7
07A2:  CLRF   19
07A4:  BTFSC  FF2.7
07A6:  BSF    19.7
07A8:  BCF    FF2.7
07AA:  RCALL  046C
07AC:  BTFSC  19.7
07AE:  BSF    FF2.7
....................    while(count_s<timer_ex) 
....................    { 
07B0:  MOVF   27,F
07B2:  BNZ   07DC
07B4:  MOVF   26,W
07B6:  SUBLW  04
07B8:  BNC   07DC
....................       if((input(UnLock_SIG)==1)&&(input(Lock_SIG)==0)) 
07BA:  BSF    F93.1
07BC:  BTFSS  F81.1
07BE:  BRA    07D4
07C0:  BSF    F93.2
07C2:  BTFSC  F81.2
07C4:  BRA    07D4
....................       { 
....................          result = 1; 
07C6:  MOVLW  01
07C8:  MOVWF  33
....................          output_low(Mirro_close); 
07CA:  BCF    F92.7
07CC:  BCF    F89.7
....................          return result; 
07CE:  MOVFF  33,01
07D2:  BRA    07E4
....................       } 
....................       output_high(Mirro_close); 
07D4:  BCF    F92.7
07D6:  BSF    F89.7
....................       mirror_st = 0; 
07D8:  BCF    28.0
....................    } 
07DA:  BRA    07B0
....................    output_low(Mirro_close); 
07DC:  BCF    F92.7
07DE:  BCF    F89.7
....................    return result; 
07E0:  MOVFF  33,01
.................... } 
07E4:  RETURN 0
.................... //=========================== 
.................... void open_mirror_BT() 
.................... { 
....................    if(disable_mirror_button==0) 
*
083E:  BTFSC  28.1
0840:  BRA    0872
....................    { 
....................       count_s = 0; 
0842:  CLRF   27
0844:  CLRF   26
....................       fprintf(DEBUG,"open_mirror_BT\r\n, "); 
0846:  MOVLW  5C
0848:  MOVWF  FF6
084A:  MOVLW  05
084C:  MOVWF  FF7
084E:  CLRF   19
0850:  BTFSC  FF2.7
0852:  BSF    19.7
0854:  BCF    FF2.7
0856:  RCALL  046C
0858:  BTFSC  19.7
085A:  BSF    FF2.7
....................       while(count_s<timer_ex) 
....................       { 
085C:  MOVF   27,F
085E:  BNZ   086E
0860:  MOVF   26,W
0862:  SUBLW  04
0864:  BNC   086E
....................          output_high(Mirro_open); 
0866:  BCF    F92.6
0868:  BSF    F89.6
....................          mirror_st = 1; 
086A:  BSF    28.0
....................       } 
086C:  BRA    085C
....................       output_low(Mirro_open); 
086E:  BCF    F92.6
0870:  BCF    F89.6
....................    } 
.................... } 
0872:  GOTO   08A8 (RETURN)
.................... //========================== 
.................... void close_mirror_BT() 
.................... { 
....................    if(disable_mirror_button==0) 
*
0806:  BTFSC  28.1
0808:  BRA    083A
....................    { 
....................       count_s = 0; 
080A:  CLRF   27
080C:  CLRF   26
....................       fprintf(DEBUG,"close_mirror_BT\r\n, "); 
080E:  MOVLW  70
0810:  MOVWF  FF6
0812:  MOVLW  05
0814:  MOVWF  FF7
0816:  CLRF   19
0818:  BTFSC  FF2.7
081A:  BSF    19.7
081C:  BCF    FF2.7
081E:  RCALL  046C
0820:  BTFSC  19.7
0822:  BSF    FF2.7
....................       while(count_s<timer_ex) 
....................       { 
0824:  MOVF   27,F
0826:  BNZ   0836
0828:  MOVF   26,W
082A:  SUBLW  04
082C:  BNC   0836
....................          output_high(Mirro_close); 
082E:  BCF    F92.7
0830:  BSF    F89.7
....................          mirror_st = 0; 
0832:  BCF    28.0
....................       } 
0834:  BRA    0824
....................       output_low(Mirro_close); 
0836:  BCF    F92.7
0838:  BCF    F89.7
....................    } 
.................... } 
083A:  GOTO   08A4 (RETURN)
.................... //=========================== 
.................... void button_touching() 
.................... { 
....................    if((input(BT_IO)==1)&&(timer_bt>100)) 
*
0876:  BSF    F93.5
0878:  BTFSS  F81.5
087A:  BRA    0886
087C:  MOVF   2F,W
087E:  SUBLW  64
0880:  BC    0886
....................    { 
....................       bt_flag_h = 1; 
0882:  BSF    28.3
....................       timer_bt=0; 
0884:  CLRF   2F
....................    } 
....................    if((input(BT_IO)==0)&&(timer_bt>100)) 
0886:  BSF    F93.5
0888:  BTFSC  F81.5
088A:  BRA    0896
088C:  MOVF   2F,W
088E:  SUBLW  64
0890:  BC    0896
....................    { 
....................       bt_flag_l = 1; 
0892:  BSF    28.4
....................       timer_bt=0; 
0894:  CLRF   2F
....................    } 
....................    if((bt_flag_l==1) && (bt_flag_h==1)) 
0896:  BTFSS  28.4
0898:  BRA    08AC
089A:  BTFSS  28.3
089C:  BRA    08AC
....................    { 
....................       if(mirror_st == 1) 
089E:  BTFSS  28.0
08A0:  BRA    08A6
....................       { 
....................          close_mirror_BT(); 
08A2:  BRA    0806
....................       } 
....................       else 
08A4:  BRA    08A8
....................       { 
....................          open_mirror_BT(); 
08A6:  BRA    083E
....................       } 
....................       bt_flag_l=0; 
08A8:  BCF    28.4
....................       bt_flag_h=0; 
08AA:  BCF    28.3
....................    }   
.................... } 
08AC:  GOTO   0A50 (RETURN)
.................... //=========================== 
.................... void main() 
.................... { 
*
095A:  CLRF   FF8
095C:  BCF    FD0.7
095E:  BSF    07.7
0960:  CLRF   FEA
0962:  CLRF   FE9
0964:  MOVLW  72
0966:  MOVWF  FD3
0968:  MOVF   FD3,W
096A:  BCF    F92.1
096C:  BSF    F89.1
096E:  CLRF   1A
0970:  CLRF   1B
0972:  CLRF   1C
0974:  CLRF   1F
0976:  MOVLW  64
0978:  MOVWF  1E
097A:  CLRF   21
097C:  CLRF   20
097E:  CLRF   23
0980:  CLRF   22
0982:  CLRF   25
0984:  CLRF   24
0986:  CLRF   27
0988:  MOVLW  05
098A:  MOVWF  26
098C:  BCF    28.0
098E:  CLRF   29
0990:  CLRF   2A
0992:  MOVLW  0A
0994:  MOVWF  2B
0996:  CLRF   2C
0998:  CLRF   2D
099A:  CLRF   2E
099C:  CLRF   2F
099E:  CLRF   30
09A0:  BCF    28.1
09A2:  BCF    28.2
09A4:  BCF    28.3
09A6:  BCF    28.4
09A8:  BCF    FC2.6
09AA:  BCF    FC2.7
09AC:  MOVF   FC1,W
09AE:  ANDLW  80
09B0:  IORLW  7F
09B2:  MOVWF  FC1
09B4:  CLRF   32
09B6:  CLRF   31
....................    int16 timeout=0; 
....................    setup_timer_0(T0_INTERNAL|T0_DIV_8|T0_8_BIT);      //1.0 ms overflow 
09B8:  MOVLW  C2
09BA:  MOVWF  FD5
....................    disable_interrupts(INT_TIMER0); 
09BC:  BCF    FF2.5
....................    disable_interrupts(INT_EXT_L2H); 
09BE:  BCF    FF2.4
....................    disable_interrupts(GLOBAL); 
09C0:  BCF    FF2.6
09C2:  BCF    FF2.7
09C4:  BTFSC  FF2.7
09C6:  BRA    09C2
....................    setup_oscillator(OSC_8MHZ|OSC_INTRC); 
09C8:  MOVLW  72
09CA:  MOVWF  FD3
09CC:  MOVF   FD3,W
....................     
....................    //setup_adc(ADC_CLOCK_DIV_64|ADC_TAD_MUL_2|VSS_VDD); 
....................    //setup_adc_ports(sAN0|sAN2); 
....................    //set_adc_channel(0); 
....................    //set_pwm1_duty(1); 
....................    
....................    //delay_ms(1000); 
....................    ext_int_edge( L_TO_H ); 
09CE:  BSF    FF1.6
....................    enable_interrupts(INT_EXT); 
09D0:  BSF    FF2.4
....................    enable_interrupts(INT_TIMER0); 
09D2:  BSF    FF2.5
....................    enable_interrupts(GLOBAL); 
09D4:  MOVLW  C0
09D6:  IORWF  FF2,F
....................     
....................    output_high(Keep_PWR); 
09D8:  BCF    F93.4
09DA:  BSF    F8A.4
....................    open_mirror_remote();   
09DC:  RCALL  0714
....................     
....................    fprintf(DEBUG,"Start...\r\n"); 
09DE:  MOVLW  84
09E0:  MOVWF  FF6
09E2:  MOVLW  05
09E4:  MOVWF  FF7
09E6:  CLRF   19
09E8:  BTFSC  FF2.7
09EA:  BSF    19.7
09EC:  BCF    FF2.7
09EE:  RCALL  046C
09F0:  BTFSC  19.7
09F2:  BSF    FF2.7
....................    delay_ms(1000); 
09F4:  MOVLW  04
09F6:  MOVWF  33
09F8:  MOVLW  FA
09FA:  MOVWF  34
09FC:  RCALL  076E
09FE:  DECFSZ 33,F
0A00:  BRA    09F8
....................     while(1) 
....................     { 
....................       if(input(ACC_CHECK)==0) 
0A02:  BSF    F93.3
0A04:  BTFSC  F81.3
0A06:  BRA    0A46
....................       { 
....................          if((second_refer>2)&&(input(ACC_CHECK)==0)) 
0A08:  MOVF   30,W
0A0A:  SUBLW  02
0A0C:  BC    0A44
0A0E:  BSF    F93.3
0A10:  BTFSC  F81.3
0A12:  BRA    0A44
....................          { 
....................             //door_unlock(); 
....................             if((input(Lock_SIG)==1)&&(input(UnLock_SIG)==0)) 
0A14:  BSF    F93.2
0A16:  BTFSS  F81.2
0A18:  BRA    0A2E
0A1A:  BSF    F93.1
0A1C:  BTFSC  F81.1
0A1E:  BRA    0A2E
....................             { 
....................                //fprintf(DEBUG,"lock is low %lu\r\n, ", count_s); 
.................... 			   sleeping(10); 
0A20:  MOVLW  0A
0A22:  MOVWF  34
0A24:  RCALL  06E2
....................                if(close_mirror_remote()==1) 
0A26:  RCALL  0794
0A28:  DECFSZ 01,W
0A2A:  BRA    0A2E
....................                { 
....................                    open_mirror_remote(); 
0A2C:  RCALL  0714
....................                } 
....................             } 
....................             if((input(UnLock_SIG)==1)&&(input(Lock_SIG)==0)) 
0A2E:  BSF    F93.1
0A30:  BTFSS  F81.1
0A32:  BRA    0A42
0A34:  BSF    F93.2
0A36:  BTFSC  F81.2
0A38:  BRA    0A42
....................             { 
....................                //fprintf(DEBUG,"unlock is low %lu\r\n, ", count_s); 
....................                if(open_mirror_remote()==1) 
0A3A:  RCALL  0714
0A3C:  DECFSZ 01,W
0A3E:  BRA    0A42
....................                { 
....................                   close_mirror_remote(); 
0A40:  RCALL  0794
....................                } 
....................             } 
....................             door_unlock(); 
0A42:  BRA    07E6
....................          } 
....................       } 
....................       else 
0A44:  BRA    0AC2
....................       { 
....................          if(input(ACC_CHECK)==1) 
0A46:  BSF    F93.3
0A48:  BTFSS  F81.3
0A4A:  BRA    0A84
....................          { 
....................             second_refer=0; 
0A4C:  CLRF   30
....................             button_touching(); 
0A4E:  BRA    0876
....................             if(speed>20) 
0A50:  MOVF   2D,W
0A52:  SUBLW  14
0A54:  BC    0A64
....................             { 
....................                 if(repeat_check_speed<20) 
0A56:  MOVF   2E,W
0A58:  SUBLW  13
0A5A:  BNC   0A60
....................                 { 
....................                     repeat_check_speed++; 
0A5C:  INCF   2E,F
....................                 } 
....................                 else 
0A5E:  BRA    0A62
....................                 { 
....................                     door_lock(); 
0A60:  BRA    08B0
....................                 } 
....................             } 
....................             else 
0A62:  BRA    0A66
....................             { 
....................                //door_unlock(); 
....................                repeat_check_speed=0; 
0A64:  CLRF   2E
....................             } 
....................             if((input(UnLock_SIG)==1)&&(input(Lock_SIG)==0)) 
0A66:  BSF    F93.1
0A68:  BTFSS  F81.1
0A6A:  BRA    0A76
0A6C:  BSF    F93.2
0A6E:  BTFSC  F81.2
0A70:  BRA    0A76
....................             { 
....................                door_lock_flag = 0; 
0A72:  BCF    28.2
....................             } 
....................             else if((input(Lock_SIG)==1)&&(input(UnLock_SIG)==0)) 
0A74:  BRA    0A84
0A76:  BSF    F93.2
0A78:  BTFSS  F81.2
0A7A:  BRA    0A84
0A7C:  BSF    F93.1
0A7E:  BTFSC  F81.1
0A80:  BRA    0A84
....................             { 
....................                door_lock_flag = 1; 
0A82:  BSF    28.2
....................             } 
....................          } 
.................... 		 fprintf(DEBUG,"speed = %u, pulse = %u\r\n, ", speed,count_pulse); 
0A84:  MOVLW  90
0A86:  MOVWF  FF6
0A88:  MOVLW  05
0A8A:  MOVWF  FF7
0A8C:  MOVLW  08
0A8E:  MOVWF  35
0A90:  RCALL  05B4
0A92:  MOVFF  2D,33
0A96:  MOVLW  1B
0A98:  MOVWF  34
0A9A:  RCALL  08D0
0A9C:  MOVLW  9A
0A9E:  MOVWF  FF6
0AA0:  MOVLW  05
0AA2:  MOVWF  FF7
0AA4:  MOVLW  0A
0AA6:  MOVWF  35
0AA8:  RCALL  05B4
0AAA:  MOVFF  29,33
0AAE:  MOVLW  1B
0AB0:  MOVWF  34
0AB2:  RCALL  08D0
0AB4:  MOVLW  A6
0AB6:  MOVWF  FF6
0AB8:  MOVLW  05
0ABA:  MOVWF  FF7
0ABC:  MOVLW  04
0ABE:  MOVWF  35
0AC0:  RCALL  05B4
....................       }      
....................       delay_ms(50); 
0AC2:  MOVLW  32
0AC4:  MOVWF  34
0AC6:  RCALL  076E
....................     } 
0AC8:  BRA    0A02
.................... } 
0ACA:  SLEEP 

Configuration Fuses:
   Word  1: C800   INTRC_IO FCMEN IESO
   Word  2: 1E0D   NOPUT NOBROWNOUT NOWDT WDT32768
   Word  3: 0000   NOMCLR
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C003   NOPROTECT NOCPB NOCPD
   Word  6: E003   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 4003   NOEBTR NOEBTRB
