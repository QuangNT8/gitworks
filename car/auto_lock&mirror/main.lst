CCS PCH C Compiler, Version 4.140, 33034               01-Jan-18 18:29

               Filename:   G:\projects\car\auto_lock&mirror\main.lst

               ROM used:   2354 bytes (57%)
                           Largest free fragment is 1738
               RAM used:   48 (19%) at main() level
                           72 (28%) worst case
               Stack:     7 worst case (4 in main + 3 for interrupts)

*
0000:  GOTO   07C0
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   054E
0060:  BTFSS  FF2.4
0062:  GOTO   006C
0066:  BTFSC  FF2.1
0068:  GOTO   01A6
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include "main.h" 
.................... #include <18F1220.h> 
.................... //////// Standard Header file for the PIC18F1220 device //////////////// 
.................... #device PIC18F1220 
.................... #list 
....................  
....................  
.................... #device adc=8 
.................... #FUSES NOWDT,INTRC_IO,NOPUT,NOPROTECT,NODEBUG,NOBROWNOUT,NOLVP,NOCPD,NOMCLR//18F1220 
.................... #use delay(clock=8000000) 
*
061C:  CLRF   FEA
061E:  MOVLW  30
0620:  MOVWF  FE9
0622:  MOVF   FEF,W
0624:  BZ    0640
0626:  MOVLW  02
0628:  MOVWF  01
062A:  CLRF   00
062C:  DECFSZ 00,F
062E:  BRA    062C
0630:  DECFSZ 01,F
0632:  BRA    062A
0634:  MOVLW  97
0636:  MOVWF  00
0638:  DECFSZ 00,F
063A:  BRA    0638
063C:  DECFSZ FEF,F
063E:  BRA    0626
0640:  RETURN 0
.................... #use rs232(baud=9600,parity=N,xmit=PIN_A1,rcv=PIN_A0,bits=8,stream=DEBUG) 
*
00BA:  BCF    F92.1
00BC:  BCF    F89.1
00BE:  MOVLW  08
00C0:  MOVWF  01
00C2:  BRA    00C4
00C4:  NOP   
00C6:  BSF    01.7
00C8:  BRA    00E6
00CA:  BCF    01.7
00CC:  RRCF   37,F
00CE:  BTFSC  FD8.0
00D0:  BSF    F89.1
00D2:  BTFSS  FD8.0
00D4:  BCF    F89.1
00D6:  BSF    01.6
00D8:  BRA    00E6
00DA:  BCF    01.6
00DC:  DECFSZ 01,F
00DE:  BRA    00CC
00E0:  BRA    00E2
00E2:  NOP   
00E4:  BSF    F89.1
00E6:  MOVLW  3F
00E8:  MOVWF  FE9
00EA:  DECFSZ FE9,F
00EC:  BRA    00EA
00EE:  NOP   
00F0:  BTFSC  01.7
00F2:  BRA    00CA
00F4:  BTFSC  01.6
00F6:  BRA    00DA
00F8:  RETURN 0
....................  
....................  
.................... #define timing_pro_store 0 
....................  
.................... #define  timer_ex             5 
.................... #define  Pulse_per_around     3 
.................... #define  Tire_perimeter       1.758 
....................  
.................... #define  door_UnLock_C    PIN_A3 
.................... #define  door_Lock_C      PIN_A2 
....................  
.................... #define  Speed_Sig      PIN_B0 
.................... #define  UnLock_SIG     PIN_B1 
.................... #define  Lock_SIG       PIN_B2 
.................... #define  BT_IO          PIN_B5 
.................... #define  Mirro_open     PIN_A6 
.................... #define  Mirro_close    PIN_A7 
....................  
....................  
.................... #define  ACC_CHECK      PIN_B3 
....................  
.................... #define  disable_blink  disable_interrupts(INT_TIMER0) 
.................... #define  enable_blink   enable_interrupts(INT_TIMER0) 
....................  
.................... //=========================== 
.................... int8 main_st=0,VR=0,SS1=0,adc2; 
.................... int16 led_fre=100; 
.................... unsigned int16 count1=0,count2=0; 
.................... int16 count_msec=0,count_s=timer_ex; 
.................... int1 mirror_st=0; 
.................... int8 count_pulse=0; 
.................... int8 speed=0; 
.................... volatile int8 timer_bt=0; 
.................... volatile int8 second_refer=0; 
.................... int1 disable_mirror_button=0; 
.................... int1 door_lock_flag=0; 
.................... int1 bt_flag_h=0; 
.................... int1 bt_flag_l=0; 
.................... //=========================== 
.................... /*  
....................    V = (m/1000)*3600 
....................    m = 3/CV (3 number pulse per around) 
....................    V = ((count_pulse x Tire_perimeter)/Pulse_per_around)x3.6 
....................    V = (count_pulse x 1.7584)/3x3.6 ~ count_pulse*2.1 
.................... */ 
.................... int8 calculate_speed() 
.................... { 
*
04A8:  CLRF   35
....................    int8 result=0; 
....................    result = ((count_pulse*Tire_perimeter)/Pulse_per_around)*3.6; 
04AA:  CLRF   37
04AC:  MOVFF  29,36
04B0:  BRA    01E8
04B2:  MOVFF  03,3D
04B6:  MOVFF  02,3C
04BA:  MOVFF  01,3B
04BE:  MOVFF  00,3A
04C2:  MOVLW  25
04C4:  MOVWF  41
04C6:  MOVLW  06
04C8:  MOVWF  40
04CA:  MOVLW  61
04CC:  MOVWF  3F
04CE:  MOVLW  7F
04D0:  MOVWF  3E
04D2:  RCALL  0220
04D4:  MOVFF  00,36
04D8:  MOVFF  01,37
04DC:  MOVFF  02,38
04E0:  MOVFF  03,39
04E4:  MOVFF  03,3D
04E8:  MOVFF  02,3C
04EC:  MOVFF  01,3B
04F0:  MOVFF  00,3A
04F4:  CLRF   41
04F6:  CLRF   40
04F8:  MOVLW  40
04FA:  MOVWF  3F
04FC:  MOVLW  80
04FE:  MOVWF  3E
0500:  BRA    0312
0502:  MOVFF  00,36
0506:  MOVFF  01,37
050A:  MOVFF  02,38
050E:  MOVFF  03,39
0512:  MOVFF  03,3D
0516:  MOVFF  02,3C
051A:  MOVFF  01,3B
051E:  MOVFF  00,3A
0522:  MOVLW  66
0524:  MOVWF  41
0526:  MOVWF  40
0528:  MOVWF  3F
052A:  MOVLW  80
052C:  MOVWF  3E
052E:  RCALL  0220
0530:  MOVFF  03,39
0534:  MOVFF  02,38
0538:  MOVFF  01,37
053C:  MOVFF  00,36
0540:  BRA    046E
0542:  MOVFF  01,35
....................    return result; 
0546:  MOVFF  35,01
.................... } 
054A:  GOTO   0570 (RETURN)
.................... //=========================== 
.................... #INT_EXT 
.................... void ext0_isr() 
.................... { 
....................    fprintf(DEBUG,"ext0_isr %u\r\n, ",count_pulse); 
*
01A6:  MOVLW  D8
01A8:  MOVWF  FF6
01AA:  MOVLW  01
01AC:  MOVWF  FF7
01AE:  MOVLW  09
01B0:  MOVWF  34
01B2:  RCALL  00FA
01B4:  MOVFF  29,34
01B8:  MOVLW  1B
01BA:  MOVWF  35
01BC:  RCALL  0140
01BE:  MOVLW  E3
01C0:  MOVWF  FF6
01C2:  MOVLW  01
01C4:  MOVWF  FF7
01C6:  MOVLW  04
01C8:  MOVWF  34
01CA:  RCALL  00FA
....................    //delay_us(100); 
....................    if(input(Speed_Sig)==1) count_pulse++;  
01CC:  BSF    F93.0
01CE:  BTFSC  F81.0
01D0:  INCF   29,F
.................... } 
.................... //=========================== 
01D2:  BCF    FF2.1
01D4:  GOTO   006C
.................... #int_TIMER0 
.................... void  TIMER0_isr(void)  
.................... { 
*
054E:  CLRF   34
....................    char temp=0; 
....................    count_msec++; 
0550:  INCF   24,F
0552:  BTFSC  FD8.2
0554:  INCF   25,F
....................    disable_interrupts(INT_EXT); 
0556:  BCF    FF2.4
....................    timer_bt++; 
0558:  INCF   2B,F
....................    if(count_msec>=935) // 1second 
055A:  MOVF   25,W
055C:  SUBLW  02
055E:  BC    0594
0560:  XORLW  FF
0562:  BNZ   056A
0564:  MOVF   24,W
0566:  SUBLW  A6
0568:  BC    0594
....................    { 
....................       //output_toggle(BT_IO); 
....................       count_msec=0; 
056A:  CLRF   25
056C:  CLRF   24
....................       speed = calculate_speed(); 
056E:  BRA    04A8
0570:  MOVFF  01,2A
....................       //fprintf(DEBUG,"speed = %u, pulse = %u\r\n, ", speed,count_pulse); 
....................       count_pulse=0; 
0574:  CLRF   29
....................       if(speed>20)  
0576:  MOVF   2A,W
0578:  SUBLW  14
057A:  BC    0580
....................       { 
....................          disable_mirror_button = 1; 
057C:  BSF    28.1
....................       } 
....................       else 
057E:  BRA    0582
....................       { 
....................          disable_mirror_button = 0; 
0580:  BCF    28.1
....................       } 
....................       second_refer++; 
0582:  INCF   2C,F
....................       if(count_s<timer_ex)  
0584:  MOVF   27,F
0586:  BNZ   0594
0588:  MOVF   26,W
058A:  SUBLW  04
058C:  BNC   0594
....................       { 
....................          count_s++; 
058E:  INCF   26,F
0590:  BTFSC  FD8.2
0592:  INCF   27,F
....................          //fprintf(DEBUG,"Timer overflow %lu\r\n, ",count_s); 
....................          //output_high(Mirro_close); 
....................       } 
....................    } 
....................    enable_interrupts(INT_EXT); 
0594:  BSF    FF2.4
.................... } 
.................... //=========================== 
0596:  BCF    FF2.2
0598:  GOTO   006C
.................... void door_lock() 
.................... { 
....................    if(door_lock_flag==0) 
*
07A0:  BTFSC  28.2
07A2:  BRA    07BC
....................    { 
....................       output_high(door_Lock_C); 
07A4:  BCF    F92.2
07A6:  BSF    F89.2
....................       delay_ms(500); 
07A8:  MOVLW  02
07AA:  MOVWF  2F
07AC:  MOVLW  FA
07AE:  MOVWF  30
07B0:  RCALL  061C
07B2:  DECFSZ 2F,F
07B4:  BRA    07AC
....................       output_low(door_Lock_C); 
07B6:  BCF    F92.2
07B8:  BCF    F89.2
....................       door_lock_flag=1; 
07BA:  BSF    28.2
....................    } 
.................... } 
07BC:  GOTO   089E (RETURN)
.................... //=========================== 
.................... void door_unlock() 
.................... { 
....................    if(door_lock_flag==1) 
*
06EE:  BTFSS  28.2
06F0:  BRA    070A
....................    { 
....................       output_high(door_UnLock_C); 
06F2:  BCF    F92.3
06F4:  BSF    F89.3
....................       delay_ms(500); 
06F6:  MOVLW  02
06F8:  MOVWF  2F
06FA:  MOVLW  FA
06FC:  MOVWF  30
06FE:  RCALL  061C
0700:  DECFSZ 2F,F
0702:  BRA    06FA
....................       output_low(door_UnLock_C); 
0704:  BCF    F92.3
0706:  BCF    F89.3
....................       door_lock_flag=0; 
0708:  BCF    28.2
....................    } 
.................... } 
070A:  GOTO   088A (RETURN)
.................... //=========================== 
.................... int8 open_mirror_remote() 
.................... { 
*
06AE:  CLRF   2F
....................    int8 result = 0; 
....................    count_s = 0; 
06B0:  CLRF   27
06B2:  CLRF   26
....................    fprintf(DEBUG,"open_mirror_remote\r\n, "); 
06B4:  MOVLW  9C
06B6:  MOVWF  FF6
06B8:  MOVLW  05
06BA:  MOVWF  FF7
06BC:  RCALL  0642
....................    while(count_s<timer_ex) 
....................    { 
06BE:  MOVF   27,F
06C0:  BNZ   06E4
06C2:  MOVF   26,W
06C4:  SUBLW  04
06C6:  BNC   06E4
....................       if(input(Lock_SIG)==0) 
06C8:  BSF    F93.2
06CA:  BTFSC  F81.2
06CC:  BRA    06DC
....................       { 
....................          result = 1; 
06CE:  MOVLW  01
06D0:  MOVWF  2F
....................          output_low(Mirro_open); 
06D2:  BCF    F92.6
06D4:  BCF    F89.6
....................          return result; 
06D6:  MOVFF  2F,01
06DA:  BRA    06EC
....................       } 
....................       output_high(Mirro_open); 
06DC:  BCF    F92.6
06DE:  BSF    F89.6
....................       mirror_st = 1; 
06E0:  BSF    28.0
....................    } 
06E2:  BRA    06BE
....................    output_low(Mirro_open); 
06E4:  BCF    F92.6
06E6:  BCF    F89.6
....................    return result; 
06E8:  MOVFF  2F,01
.................... } 
06EC:  RETURN 0
.................... //========================== 
.................... int8 close_mirror_remote() 
.................... { 
*
066E:  CLRF   2F
....................    int8 result = 0; 
....................    count_s = 0; 
0670:  CLRF   27
0672:  CLRF   26
....................    fprintf(DEBUG,"close_mirror_remote\r\n, "); 
0674:  MOVLW  B4
0676:  MOVWF  FF6
0678:  MOVLW  05
067A:  MOVWF  FF7
067C:  RCALL  0642
....................    while(count_s<timer_ex) 
....................    { 
067E:  MOVF   27,F
0680:  BNZ   06A4
0682:  MOVF   26,W
0684:  SUBLW  04
0686:  BNC   06A4
....................       if(input(UnLock_SIG)==0) 
0688:  BSF    F93.1
068A:  BTFSC  F81.1
068C:  BRA    069C
....................       { 
....................          result = 1; 
068E:  MOVLW  01
0690:  MOVWF  2F
....................          output_low(Mirro_close); 
0692:  BCF    F92.7
0694:  BCF    F89.7
....................          return result; 
0696:  MOVFF  2F,01
069A:  BRA    06AC
....................       } 
....................       output_high(Mirro_close); 
069C:  BCF    F92.7
069E:  BSF    F89.7
....................       mirror_st = 0; 
06A0:  BCF    28.0
....................    } 
06A2:  BRA    067E
....................    output_low(Mirro_close); 
06A4:  BCF    F92.7
06A6:  BCF    F89.7
....................    return result; 
06A8:  MOVFF  2F,01
.................... } 
06AC:  RETURN 0
.................... //=========================== 
.................... void open_mirror_BT() 
.................... { 
....................    if(disable_mirror_button==0) 
*
073A:  BTFSC  28.1
073C:  BRA    0762
....................    { 
....................       count_s = 0; 
073E:  CLRF   27
0740:  CLRF   26
....................       fprintf(DEBUG,"open_mirror_BT\r\n, "); 
0742:  MOVLW  CC
0744:  MOVWF  FF6
0746:  MOVLW  05
0748:  MOVWF  FF7
074A:  RCALL  0642
....................       while(count_s<timer_ex) 
....................       { 
074C:  MOVF   27,F
074E:  BNZ   075E
0750:  MOVF   26,W
0752:  SUBLW  04
0754:  BNC   075E
....................          output_high(Mirro_open); 
0756:  BCF    F92.6
0758:  BSF    F89.6
....................          mirror_st = 1; 
075A:  BSF    28.0
....................       } 
075C:  BRA    074C
....................       output_low(Mirro_open); 
075E:  BCF    F92.6
0760:  BCF    F89.6
....................    } 
.................... } 
0762:  GOTO   0798 (RETURN)
.................... //========================== 
.................... void close_mirror_BT() 
.................... { 
....................    if(disable_mirror_button==0) 
*
070E:  BTFSC  28.1
0710:  BRA    0736
....................    { 
....................       count_s = 0; 
0712:  CLRF   27
0714:  CLRF   26
....................       fprintf(DEBUG,"close_mirror_BT\r\n, "); 
0716:  MOVLW  E0
0718:  MOVWF  FF6
071A:  MOVLW  05
071C:  MOVWF  FF7
071E:  RCALL  0642
....................       while(count_s<timer_ex) 
....................       { 
0720:  MOVF   27,F
0722:  BNZ   0732
0724:  MOVF   26,W
0726:  SUBLW  04
0728:  BNC   0732
....................          output_high(Mirro_close); 
072A:  BCF    F92.7
072C:  BSF    F89.7
....................          mirror_st = 0; 
072E:  BCF    28.0
....................       } 
0730:  BRA    0720
....................       output_low(Mirro_close); 
0732:  BCF    F92.7
0734:  BCF    F89.7
....................    } 
.................... } 
0736:  GOTO   0794 (RETURN)
.................... //=========================== 
.................... void button_touching() 
.................... { 
....................    if((input(BT_IO)==1)&&(timer_bt>100)) 
*
0766:  BSF    F93.5
0768:  BTFSS  F81.5
076A:  BRA    0776
076C:  MOVF   2B,W
076E:  SUBLW  64
0770:  BC    0776
....................    { 
....................       bt_flag_h = 1; 
0772:  BSF    28.3
....................       timer_bt=0; 
0774:  CLRF   2B
....................    } 
....................    if((input(BT_IO)==0)&&(timer_bt>100)) 
0776:  BSF    F93.5
0778:  BTFSC  F81.5
077A:  BRA    0786
077C:  MOVF   2B,W
077E:  SUBLW  64
0780:  BC    0786
....................    { 
....................       bt_flag_l = 1; 
0782:  BSF    28.4
....................       timer_bt=0; 
0784:  CLRF   2B
....................    } 
....................    if((bt_flag_l==1) && (bt_flag_h==1)) 
0786:  BTFSS  28.4
0788:  BRA    079C
078A:  BTFSS  28.3
078C:  BRA    079C
....................    { 
....................       if(mirror_st == 1) 
078E:  BTFSS  28.0
0790:  BRA    0796
....................       { 
....................          close_mirror_BT(); 
0792:  BRA    070E
....................       } 
....................       else 
0794:  BRA    0798
....................       { 
....................          open_mirror_BT(); 
0796:  BRA    073A
....................       } 
....................       bt_flag_l=0; 
0798:  BCF    28.4
....................       bt_flag_h=0; 
079A:  BCF    28.3
....................    }   
.................... } 
079C:  GOTO   0896 (RETURN)
.................... //=========================== 
.................... void main() 
.................... { 
*
07C0:  CLRF   FF8
07C2:  BCF    FD0.7
07C4:  BSF    07.7
07C6:  CLRF   FEA
07C8:  CLRF   FE9
07CA:  MOVLW  72
07CC:  MOVWF  FD3
07CE:  MOVF   FD3,W
07D0:  BCF    F92.1
07D2:  BSF    F89.1
07D4:  CLRF   1A
07D6:  CLRF   1B
07D8:  CLRF   1C
07DA:  CLRF   1F
07DC:  MOVLW  64
07DE:  MOVWF  1E
07E0:  CLRF   21
07E2:  CLRF   20
07E4:  CLRF   23
07E6:  CLRF   22
07E8:  CLRF   25
07EA:  CLRF   24
07EC:  CLRF   27
07EE:  MOVLW  05
07F0:  MOVWF  26
07F2:  BCF    28.0
07F4:  CLRF   29
07F6:  CLRF   2A
07F8:  CLRF   2B
07FA:  CLRF   2C
07FC:  BCF    28.1
07FE:  BCF    28.2
0800:  BCF    28.3
0802:  BCF    28.4
0804:  BCF    FC2.6
0806:  BCF    FC2.7
0808:  MOVF   FC1,W
080A:  ANDLW  80
080C:  IORLW  7F
080E:  MOVWF  FC1
0810:  CLRF   2E
0812:  CLRF   2D
....................    int16 timeout=0; 
....................    setup_timer_0(T0_INTERNAL|T0_DIV_8|T0_8_BIT);      //1.0 ms overflow 
0814:  MOVLW  C2
0816:  MOVWF  FD5
....................    disable_interrupts(INT_TIMER0); 
0818:  BCF    FF2.5
....................    disable_interrupts(INT_EXT_L2H); 
081A:  BCF    FF2.4
....................    disable_interrupts(GLOBAL); 
081C:  BCF    FF2.6
081E:  BCF    FF2.7
0820:  BTFSC  FF2.7
0822:  BRA    081E
....................    setup_oscillator(OSC_8MHZ|OSC_INTRC); 
0824:  MOVLW  72
0826:  MOVWF  FD3
0828:  MOVF   FD3,W
....................     
....................    //setup_adc(ADC_CLOCK_DIV_64|ADC_TAD_MUL_2|VSS_VDD); 
....................    //setup_adc_ports(sAN0|sAN2); 
....................    //set_adc_channel(0); 
....................    //set_pwm1_duty(1); 
....................    delay_ms(1000); 
082A:  MOVLW  04
082C:  MOVWF  2F
082E:  MOVLW  FA
0830:  MOVWF  30
0832:  RCALL  061C
0834:  DECFSZ 2F,F
0836:  BRA    082E
....................    ext_int_edge( L_TO_H ); 
0838:  BSF    FF1.6
....................    enable_interrupts(INT_EXT); 
083A:  BSF    FF2.4
....................    enable_interrupts(INT_TIMER0); 
083C:  BSF    FF2.5
....................    enable_interrupts(GLOBAL); 
083E:  MOVLW  C0
0840:  IORWF  FF2,F
....................       
....................    fprintf(DEBUG,"Start...\r\n"); 
0842:  MOVLW  F4
0844:  MOVWF  FF6
0846:  MOVLW  05
0848:  MOVWF  FF7
084A:  RCALL  0642
....................    delay_ms(1000); 
084C:  MOVLW  04
084E:  MOVWF  2F
0850:  MOVLW  FA
0852:  MOVWF  30
0854:  RCALL  061C
0856:  DECFSZ 2F,F
0858:  BRA    0850
....................     while(1) 
....................     { 
....................       if(input(ACC_CHECK)==0) 
085A:  BSF    F93.3
085C:  BTFSC  F81.3
085E:  BRA    088C
....................       { 
....................          if((second_refer>2)&&(input(ACC_CHECK)==0)) 
0860:  MOVF   2C,W
0862:  SUBLW  02
0864:  BC    088A
0866:  BSF    F93.3
0868:  BTFSC  F81.3
086A:  BRA    088A
....................          { 
....................             //door_unlock(); 
....................             if(input(Lock_SIG)==0) 
086C:  BSF    F93.2
086E:  BTFSC  F81.2
0870:  BRA    087A
....................             { 
....................                //fprintf(DEBUG,"lock is low %lu\r\n, ", count_s); 
....................                if(close_mirror_remote()==1) 
0872:  RCALL  066E
0874:  DECFSZ 01,W
0876:  BRA    087A
....................                { 
....................                    open_mirror_remote(); 
0878:  RCALL  06AE
....................                } 
....................             } 
....................             if(input(UnLock_SIG)==0) 
087A:  BSF    F93.1
087C:  BTFSC  F81.1
087E:  BRA    0888
....................             { 
....................                //fprintf(DEBUG,"unlock is low %lu\r\n, ", count_s); 
....................                if(open_mirror_remote()==1) 
0880:  RCALL  06AE
0882:  DECFSZ 01,W
0884:  BRA    0888
....................                { 
....................                   close_mirror_remote(); 
0886:  RCALL  066E
....................                } 
....................             } 
....................             door_unlock(); 
0888:  BRA    06EE
....................          } 
....................       } 
....................       else 
088A:  BRA    08B0
....................       { 
....................          if(input(ACC_CHECK)==1) 
088C:  BSF    F93.3
088E:  BTFSS  F81.3
0890:  BRA    08B0
....................          { 
....................             second_refer=0; 
0892:  CLRF   2C
....................             button_touching(); 
0894:  BRA    0766
....................             if(speed>20) 
0896:  MOVF   2A,W
0898:  SUBLW  14
089A:  BC    089E
....................             { 
....................                door_lock(); 
089C:  BRA    07A0
....................             } 
....................             else 
....................             { 
....................                //door_unlock(); 
....................             } 
....................             if(input(UnLock_SIG)==0) 
089E:  BSF    F93.1
08A0:  BTFSC  F81.1
08A2:  BRA    08A8
....................             { 
....................                door_lock_flag = 0; 
08A4:  BCF    28.2
....................             } 
....................             else if(input(Lock_SIG)==0) 
08A6:  BRA    08B0
08A8:  BSF    F93.2
08AA:  BTFSC  F81.2
08AC:  BRA    08B0
....................             { 
....................                door_lock_flag = 1; 
08AE:  BSF    28.2
....................             } 
....................          } 
....................       } 
....................       fprintf(DEBUG,"speed = %u, pulse = %u\r\n, ", speed,count_pulse); 
08B0:  MOVLW  00
08B2:  MOVWF  FF6
08B4:  MOVLW  06
08B6:  MOVWF  FF7
08B8:  CLRF   19
08BA:  BTFSC  FF2.7
08BC:  BSF    19.7
08BE:  BCF    FF2.7
08C0:  MOVLW  08
08C2:  MOVWF  34
08C4:  RCALL  00FA
08C6:  BTFSC  19.7
08C8:  BSF    FF2.7
08CA:  CLRF   19
08CC:  BTFSC  FF2.7
08CE:  BSF    19.7
08D0:  BCF    FF2.7
08D2:  MOVFF  2A,34
08D6:  MOVLW  1B
08D8:  MOVWF  35
08DA:  RCALL  0140
08DC:  BTFSC  19.7
08DE:  BSF    FF2.7
08E0:  MOVLW  0A
08E2:  MOVWF  FF6
08E4:  MOVLW  06
08E6:  MOVWF  FF7
08E8:  CLRF   19
08EA:  BTFSC  FF2.7
08EC:  BSF    19.7
08EE:  BCF    FF2.7
08F0:  MOVLW  0A
08F2:  MOVWF  34
08F4:  RCALL  00FA
08F6:  BTFSC  19.7
08F8:  BSF    FF2.7
08FA:  CLRF   19
08FC:  BTFSC  FF2.7
08FE:  BSF    19.7
0900:  BCF    FF2.7
0902:  MOVFF  29,34
0906:  MOVLW  1B
0908:  MOVWF  35
090A:  RCALL  0140
090C:  BTFSC  19.7
090E:  BSF    FF2.7
0910:  MOVLW  16
0912:  MOVWF  FF6
0914:  MOVLW  06
0916:  MOVWF  FF7
0918:  CLRF   19
091A:  BTFSC  FF2.7
091C:  BSF    19.7
091E:  BCF    FF2.7
0920:  MOVLW  04
0922:  MOVWF  34
0924:  CALL   00FA
0928:  BTFSC  19.7
092A:  BSF    FF2.7
....................       delay_ms(50); 
092C:  MOVLW  32
092E:  MOVWF  30
0930:  RCALL  061C
....................     } 
0932:  BRA    085A
.................... } 
0934:  SLEEP 

Configuration Fuses:
   Word  1: C800   INTRC_IO FCMEN IESO
   Word  2: 1E0D   NOPUT NOBROWNOUT NOWDT WDT32768
   Word  3: 0000   NOMCLR
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C003   NOPROTECT NOCPB NOCPD
   Word  6: E003   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 4003   NOEBTR NOEBTRB
