CCS PCH C Compiler, Version 4.140, 33034               04-Aug-18 22:15

               Filename:   D:\STM32\workspace\gitworks\car\auto_lock&mirror\main.lst

               ROM used:   2812 bytes (69%)
                           Largest free fragment is 1280
               RAM used:   41 (16%) at main() level
                           69 (27%) worst case
               Stack:     7 worst case (4 in main + 3 for interrupts)

*
0000:  GOTO   09A4
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   048C
0060:  BTFSS  FF2.4
0062:  GOTO   006C
0066:  BTFSC  FF2.1
0068:  GOTO   00BA
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include "main.h" 
.................... #include <18F1220.h> 
.................... //////// Standard Header file for the PIC18F1220 device //////////////// 
.................... #device PIC18F1220 
.................... #list 
....................  
....................  
.................... #device adc=8 
.................... #FUSES NOWDT,INTRC_IO,NOPUT,NOPROTECT,NODEBUG,NOBROWNOUT,NOLVP,NOCPD,NOMCLR//18F1220 
.................... #use delay(clock=8000000) 
*
0780:  CLRF   FEA
0782:  MOVLW  28
0784:  MOVWF  FE9
0786:  MOVF   FEF,W
0788:  BZ    07A4
078A:  MOVLW  02
078C:  MOVWF  01
078E:  CLRF   00
0790:  DECFSZ 00,F
0792:  BRA    0790
0794:  DECFSZ 01,F
0796:  BRA    078E
0798:  MOVLW  97
079A:  MOVWF  00
079C:  DECFSZ 00,F
079E:  BRA    079C
07A0:  DECFSZ FEF,F
07A2:  BRA    078A
07A4:  RETURN 0
.................... #use rs232(baud=9600,parity=N,xmit=PIN_A1,rcv=PIN_A0,bits=8,stream=DEBUG) 
*
042C:  BCF    F92.1
042E:  BCF    F89.1
0430:  MOVLW  08
0432:  MOVWF  01
0434:  BRA    0436
0436:  NOP   
0438:  BSF    01.7
043A:  BRA    0458
043C:  BCF    01.7
043E:  RRCF   34,F
0440:  BTFSC  FD8.0
0442:  BSF    F89.1
0444:  BTFSS  FD8.0
0446:  BCF    F89.1
0448:  BSF    01.6
044A:  BRA    0458
044C:  BCF    01.6
044E:  DECFSZ 01,F
0450:  BRA    043E
0452:  BRA    0454
0454:  NOP   
0456:  BSF    F89.1
0458:  MOVLW  3F
045A:  MOVWF  FE9
045C:  DECFSZ FE9,F
045E:  BRA    045C
0460:  NOP   
0462:  BTFSC  01.7
0464:  BRA    043C
0466:  BTFSC  01.6
0468:  BRA    044C
046A:  RETURN 0
....................  
....................  
.................... #define timing_pro_store 0 
....................  
.................... #define  timer_ex             5 
.................... #define  Pulse_per_around     3 
.................... #define  Tire_perimeter       1.758 
....................  
.................... #define  door_UnLock_C    PIN_A3 
.................... #define  door_Lock_C      PIN_A2 
....................  
.................... #define  Speed_Sig      PIN_B0 
.................... #define  UnLock_SIG     PIN_B1 
.................... #define  Lock_SIG       PIN_B2 
.................... #define  Keep_PWR       PIN_B4 
.................... #define  BT_IO          PIN_B5 
.................... #define  Mirro_open     PIN_A6 
.................... #define  Mirro_close    PIN_A7 
....................  
....................  
.................... #define  ACC_CHECK      PIN_B3 
....................  
.................... #define  disable_blink  disable_interrupts(INT_TIMER0) 
.................... #define  enable_blink   enable_interrupts(INT_TIMER0) 
....................  
.................... //=========================== 
.................... int16 count_msec=0,count_s=timer_ex; 
.................... int1 mirror_st=0; 
.................... int8 count_pulse=0; 
.................... volatile int8 count_keepPWR=0,timekeeping=10,enable_sleeping_flag=0; 
.................... int8 speed=0,repeat_check_speed=0; 
.................... volatile int8 timer_bt=0; 
.................... volatile int8 second_refer=0; 
.................... int1 disable_mirror_button=0; 
.................... int1 door_lock_flag=0; 
.................... int1 bt_flag_h=0; 
.................... int1 bt_flag_l=0; 
.................... //=========================== 
.................... /*  
....................    V = (m/1000)*3600 
....................    m = 3/CV (3 number pulse per around) 
....................    V = ((count_pulse x Tire_perimeter)/Pulse_per_around)x3.6 
....................    V = (count_pulse x 1.7584)/3x3.6 ~ count_pulse*2.1 
.................... */ 
.................... int8 calculate_speed() 
.................... { 
*
0386:  CLRF   32
....................    int8 result=0; 
....................    result = ((count_pulse*Tire_perimeter)/Pulse_per_around)*3.6; 
0388:  CLRF   34
038A:  MOVFF  1F,33
038E:  BRA    00C6
0390:  MOVFF  03,3A
0394:  MOVFF  02,39
0398:  MOVFF  01,38
039C:  MOVFF  00,37
03A0:  MOVLW  25
03A2:  MOVWF  3E
03A4:  MOVLW  06
03A6:  MOVWF  3D
03A8:  MOVLW  61
03AA:  MOVWF  3C
03AC:  MOVLW  7F
03AE:  MOVWF  3B
03B0:  RCALL  00FE
03B2:  MOVFF  00,33
03B6:  MOVFF  01,34
03BA:  MOVFF  02,35
03BE:  MOVFF  03,36
03C2:  MOVFF  03,3A
03C6:  MOVFF  02,39
03CA:  MOVFF  01,38
03CE:  MOVFF  00,37
03D2:  CLRF   3E
03D4:  CLRF   3D
03D6:  MOVLW  40
03D8:  MOVWF  3C
03DA:  MOVLW  80
03DC:  MOVWF  3B
03DE:  BRA    01F0
03E0:  MOVFF  00,33
03E4:  MOVFF  01,34
03E8:  MOVFF  02,35
03EC:  MOVFF  03,36
03F0:  MOVFF  03,3A
03F4:  MOVFF  02,39
03F8:  MOVFF  01,38
03FC:  MOVFF  00,37
0400:  MOVLW  66
0402:  MOVWF  3E
0404:  MOVWF  3D
0406:  MOVWF  3C
0408:  MOVLW  80
040A:  MOVWF  3B
040C:  RCALL  00FE
040E:  MOVFF  03,36
0412:  MOVFF  02,35
0416:  MOVFF  01,34
041A:  MOVFF  00,33
041E:  BRA    034C
0420:  MOVFF  01,32
....................    return result; 
0424:  MOVFF  32,01
.................... } 
0428:  GOTO   04AC (RETURN)
.................... //=========================== 
.................... #INT_EXT 
.................... void ext0_isr() 
.................... { 
....................    //fprintf(DEBUG,"ext0_isr %u\r\n, ",count_pulse); 
....................    //delay_us(100); 
....................    if(input(Speed_Sig)==1) count_pulse++;  
*
00BA:  BSF    F93.0
00BC:  BTFSC  F81.0
00BE:  INCF   1F,F
.................... } 
.................... //=========================== 
00C0:  BCF    FF2.1
00C2:  GOTO   006C
.................... #int_TIMER0 
.................... void  TIMER0_isr(void)  
.................... { 
....................    count_msec++; 
*
048C:  INCF   1A,F
048E:  BTFSC  FD8.2
0490:  INCF   1B,F
....................    disable_interrupts(INT_EXT); 
0492:  BCF    FF2.4
....................    timer_bt++; 
0494:  INCF   25,F
....................    if(count_msec>=935) // 1second 
0496:  MOVF   1B,W
0498:  SUBLW  02
049A:  BC    04F2
049C:  XORLW  FF
049E:  BNZ   04A6
04A0:  MOVF   1A,W
04A2:  SUBLW  A6
04A4:  BC    04F2
....................    { 
....................       //output_toggle(BT_IO); 
....................       count_msec=0; 
04A6:  CLRF   1B
04A8:  CLRF   1A
....................       speed = calculate_speed(); 
04AA:  BRA    0386
04AC:  MOVFF  01,23
....................       //fprintf(DEBUG,"speed = %u, pulse = %u\r\n, ", speed,count_pulse); 
....................       count_pulse=0; 
04B0:  CLRF   1F
....................       if(speed>20)  
04B2:  MOVF   23,W
04B4:  SUBLW  14
04B6:  BC    04BC
....................       { 
....................          disable_mirror_button = 1; 
04B8:  BSF    1E.1
....................       } 
....................       else 
04BA:  BRA    04BE
....................       { 
....................          disable_mirror_button = 0; 
04BC:  BCF    1E.1
....................       } 
....................       second_refer++; 
04BE:  INCF   26,F
....................       if(count_s<timer_ex)  
04C0:  MOVF   1D,F
04C2:  BNZ   04D0
04C4:  MOVF   1C,W
04C6:  SUBLW  04
04C8:  BNC   04D0
....................       { 
....................          count_s++; 
04CA:  INCF   1C,F
04CC:  BTFSC  FD8.2
04CE:  INCF   1D,F
....................          //fprintf(DEBUG,"Timer overflow %lu\r\n, ",count_s); 
....................          //output_high(Mirro_close); 
....................       } 
....................      if(enable_sleeping_flag==1) 
04D0:  DECFSZ 22,W
04D2:  BRA    04F2
....................      { 
....................         if(count_keepPWR<timekeeping) 
04D4:  MOVF   21,W
04D6:  SUBWF  20,W
04D8:  BC    04E4
....................         { 
....................            count_keepPWR++; 
04DA:  INCF   20,F
....................            fprintf(DEBUG,"."); 
04DC:  MOVLW  2E
04DE:  MOVWF  34
04E0:  RCALL  042C
....................         } 
....................         else 
04E2:  BRA    04F2
....................         { 
....................            fprintf(DEBUG,"\r\nPower off\r\n"); 
04E4:  MOVLW  FA
04E6:  MOVWF  FF6
04E8:  MOVLW  04
04EA:  MOVWF  FF7
04EC:  RCALL  046C
....................            output_low(Keep_PWR); 
04EE:  BCF    F93.4
04F0:  BCF    F8A.4
....................         } 
....................      } 
....................    } 
....................    enable_interrupts(INT_EXT); 
04F2:  BSF    FF2.4
.................... } 
.................... //=========================== 
04F4:  BCF    FF2.2
04F6:  GOTO   006C
.................... void sleeping(int8 insec) 
.................... { 
....................    fprintf(DEBUG,"\r\nPower will to turn off in %ds\r\n",insec); 
*
06F4:  MOVLW  08
06F6:  MOVWF  FF6
06F8:  MOVLW  05
06FA:  MOVWF  FF7
06FC:  MOVLW  1C
06FE:  MOVWF  29
0700:  RCALL  05C6
0702:  MOVFF  28,29
0706:  MOVLW  18
0708:  MOVWF  2A
070A:  BRA    0618
070C:  MOVLW  26
070E:  MOVWF  FF6
0710:  MOVLW  05
0712:  MOVWF  FF7
0714:  MOVLW  03
0716:  MOVWF  29
0718:  RCALL  05C6
....................    timekeeping = insec; 
071A:  MOVFF  28,21
....................    count_keepPWR = 0; 
071E:  CLRF   20
....................    enable_sleeping_flag = 1; 
0720:  MOVLW  01
0722:  MOVWF  22
.................... } 
0724:  RETURN 0
.................... //=========================== 
.................... void sleeping_disable() 
.................... { 
....................    enable_sleeping_flag = 0; 
*
05BE:  CLRF   22
....................    count_keepPWR = 0; 
05C0:  CLRF   20
.................... } 
05C2:  GOTO   072E (RETURN)
.................... //=========================== 
.................... void door_lock() 
.................... { 
....................    if(door_lock_flag==0) 
*
08C2:  BTFSC  1E.2
08C4:  BRA    08DE
....................    { 
....................       output_high(door_Lock_C); 
08C6:  BCF    F92.2
08C8:  BSF    F89.2
....................       delay_ms(500); 
08CA:  MOVLW  02
08CC:  MOVWF  27
08CE:  MOVLW  FA
08D0:  MOVWF  28
08D2:  RCALL  0780
08D4:  DECFSZ 27,F
08D6:  BRA    08CE
....................       output_low(door_Lock_C); 
08D8:  BCF    F92.2
08DA:  BCF    F89.2
....................       door_lock_flag=1; 
08DC:  BSF    1E.2
....................    } 
.................... } 
08DE:  GOTO   0A94 (RETURN)
.................... //=========================== 
.................... void door_unlock() 
.................... { 
....................    if(door_lock_flag==1) 
*
07F8:  BTFSS  1E.2
07FA:  BRA    0814
....................    { 
....................       output_high(door_UnLock_C); 
07FC:  BCF    F92.3
07FE:  BSF    F89.3
....................       delay_ms(500); 
0800:  MOVLW  02
0802:  MOVWF  27
0804:  MOVLW  FA
0806:  MOVWF  28
0808:  RCALL  0780
080A:  DECFSZ 27,F
080C:  BRA    0804
....................       output_low(door_UnLock_C); 
080E:  BCF    F92.3
0810:  BCF    F89.3
....................       door_lock_flag=0; 
0812:  BCF    1E.2
....................    } 
.................... } 
0814:  GOTO   0A76 (RETURN)
.................... //=========================== 
.................... int8 open_mirror_remote() 
.................... { 
*
0726:  CLRF   27
....................    int8 result = 0; 
....................    count_s = 0; 
0728:  CLRF   1D
072A:  CLRF   1C
....................    sleeping_disable(); 
072C:  BRA    05BE
....................    fprintf(DEBUG,"open_mirror_remote\r\n, "); 
072E:  MOVLW  2A
0730:  MOVWF  FF6
0732:  MOVLW  05
0734:  MOVWF  FF7
0736:  CLRF   19
0738:  BTFSC  FF2.7
073A:  BSF    19.7
073C:  BCF    FF2.7
073E:  RCALL  046C
0740:  BTFSC  19.7
0742:  BSF    FF2.7
....................    while(count_s<timer_ex) 
....................    { 
0744:  MOVF   1D,F
0746:  BNZ   0776
0748:  MOVF   1C,W
074A:  SUBLW  04
074C:  BNC   0776
....................       if((input(Lock_SIG)==1)&&(input(UnLock_SIG)==0)) 
074E:  BSF    F93.2
0750:  BTFSS  F81.2
0752:  BRA    076E
0754:  BSF    F93.1
0756:  BTFSC  F81.1
0758:  BRA    076E
....................       { 
....................          result = 1; 
075A:  MOVLW  01
075C:  MOVWF  27
....................          output_low(Mirro_open);       
075E:  BCF    F92.6
0760:  BCF    F89.6
....................        sleeping(10); 
0762:  MOVLW  0A
0764:  MOVWF  28
0766:  RCALL  06F4
....................          return result; 
0768:  MOVFF  27,01
076C:  BRA    077E
....................       } 
....................       output_high(Mirro_open); 
076E:  BCF    F92.6
0770:  BSF    F89.6
....................       mirror_st = 1; 
0772:  BSF    1E.0
....................    } 
0774:  BRA    0744
....................    output_low(Mirro_open); 
0776:  BCF    F92.6
0778:  BCF    F89.6
....................    return result; 
077A:  MOVFF  27,01
.................... } 
077E:  RETURN 0
.................... //========================== 
.................... int8 close_mirror_remote() 
.................... { 
*
07A6:  CLRF   27
....................    int8 result = 0; 
....................    count_s = 0; 
07A8:  CLRF   1D
07AA:  CLRF   1C
....................    fprintf(DEBUG,"close_mirror_remote\r\n, "); 
07AC:  MOVLW  42
07AE:  MOVWF  FF6
07B0:  MOVLW  05
07B2:  MOVWF  FF7
07B4:  CLRF   19
07B6:  BTFSC  FF2.7
07B8:  BSF    19.7
07BA:  BCF    FF2.7
07BC:  RCALL  046C
07BE:  BTFSC  19.7
07C0:  BSF    FF2.7
....................    while(count_s<timer_ex) 
....................    { 
07C2:  MOVF   1D,F
07C4:  BNZ   07EE
07C6:  MOVF   1C,W
07C8:  SUBLW  04
07CA:  BNC   07EE
....................       if((input(UnLock_SIG)==1)&&(input(Lock_SIG)==0)) 
07CC:  BSF    F93.1
07CE:  BTFSS  F81.1
07D0:  BRA    07E6
07D2:  BSF    F93.2
07D4:  BTFSC  F81.2
07D6:  BRA    07E6
....................       { 
....................          result = 1; 
07D8:  MOVLW  01
07DA:  MOVWF  27
....................          output_low(Mirro_close); 
07DC:  BCF    F92.7
07DE:  BCF    F89.7
....................          return result; 
07E0:  MOVFF  27,01
07E4:  BRA    07F6
....................       } 
....................       output_high(Mirro_close); 
07E6:  BCF    F92.7
07E8:  BSF    F89.7
....................       mirror_st = 0; 
07EA:  BCF    1E.0
....................    } 
07EC:  BRA    07C2
....................    output_low(Mirro_close); 
07EE:  BCF    F92.7
07F0:  BCF    F89.7
....................    return result; 
07F2:  MOVFF  27,01
.................... } 
07F6:  RETURN 0
.................... //=========================== 
.................... void open_mirror_speedover() 
.................... { 
....................     count_s = 0; 
*
08E2:  CLRF   1D
08E4:  CLRF   1C
....................     fprintf(DEBUG,"open_mirror_BT\r\n, "); 
08E6:  MOVLW  5A
08E8:  MOVWF  FF6
08EA:  MOVLW  05
08EC:  MOVWF  FF7
08EE:  CLRF   19
08F0:  BTFSC  FF2.7
08F2:  BSF    19.7
08F4:  BCF    FF2.7
08F6:  RCALL  046C
08F8:  BTFSC  19.7
08FA:  BSF    FF2.7
....................     if(mirror_st==0) 
08FC:  BTFSC  1E.0
08FE:  BRA    0916
....................     { 
....................       while(count_s<timer_ex) 
....................       { 
0900:  MOVF   1D,F
0902:  BNZ   0910
0904:  MOVF   1C,W
0906:  SUBLW  04
0908:  BNC   0910
....................          output_high(Mirro_open); 
090A:  BCF    F92.6
090C:  BSF    F89.6
....................       } 
090E:  BRA    0900
....................       mirror_st = 1; 
0910:  BSF    1E.0
....................       output_low(Mirro_open); 
0912:  BCF    F92.6
0914:  BCF    F89.6
....................     } 
.................... } 
0916:  GOTO   0A96 (RETURN)
.................... //=========================== 
.................... void open_mirror_BT() 
.................... { 
....................    if(disable_mirror_button==0) 
*
0850:  BTFSC  1E.1
0852:  BRA    0884
....................    { 
....................       count_s = 0; 
0854:  CLRF   1D
0856:  CLRF   1C
....................       fprintf(DEBUG,"open_mirror_BT\r\n, "); 
0858:  MOVLW  6E
085A:  MOVWF  FF6
085C:  MOVLW  05
085E:  MOVWF  FF7
0860:  CLRF   19
0862:  BTFSC  FF2.7
0864:  BSF    19.7
0866:  BCF    FF2.7
0868:  RCALL  046C
086A:  BTFSC  19.7
086C:  BSF    FF2.7
....................       while(count_s<timer_ex) 
....................       { 
086E:  MOVF   1D,F
0870:  BNZ   0880
0872:  MOVF   1C,W
0874:  SUBLW  04
0876:  BNC   0880
....................          output_high(Mirro_open); 
0878:  BCF    F92.6
087A:  BSF    F89.6
....................          mirror_st = 1; 
087C:  BSF    1E.0
....................       } 
087E:  BRA    086E
....................       output_low(Mirro_open); 
0880:  BCF    F92.6
0882:  BCF    F89.6
....................    } 
.................... } 
0884:  GOTO   08BA (RETURN)
.................... //========================== 
.................... void close_mirror_BT() 
.................... { 
....................    if(disable_mirror_button==0) 
*
0818:  BTFSC  1E.1
081A:  BRA    084C
....................    { 
....................       count_s = 0; 
081C:  CLRF   1D
081E:  CLRF   1C
....................       fprintf(DEBUG,"close_mirror_BT\r\n, "); 
0820:  MOVLW  82
0822:  MOVWF  FF6
0824:  MOVLW  05
0826:  MOVWF  FF7
0828:  CLRF   19
082A:  BTFSC  FF2.7
082C:  BSF    19.7
082E:  BCF    FF2.7
0830:  RCALL  046C
0832:  BTFSC  19.7
0834:  BSF    FF2.7
....................       while(count_s<timer_ex) 
....................       { 
0836:  MOVF   1D,F
0838:  BNZ   0848
083A:  MOVF   1C,W
083C:  SUBLW  04
083E:  BNC   0848
....................          output_high(Mirro_close); 
0840:  BCF    F92.7
0842:  BSF    F89.7
....................          mirror_st = 0; 
0844:  BCF    1E.0
....................       } 
0846:  BRA    0836
....................       output_low(Mirro_close); 
0848:  BCF    F92.7
084A:  BCF    F89.7
....................    } 
.................... } 
084C:  GOTO   08B6 (RETURN)
.................... //=========================== 
.................... void button_touching() 
.................... { 
....................    if((input(BT_IO)==1)&&(timer_bt>100)) 
*
0888:  BSF    F93.5
088A:  BTFSS  F81.5
088C:  BRA    0898
088E:  MOVF   25,W
0890:  SUBLW  64
0892:  BC    0898
....................    { 
....................       bt_flag_h = 1; 
0894:  BSF    1E.3
....................       timer_bt=0; 
0896:  CLRF   25
....................    } 
....................    if((input(BT_IO)==0)&&(timer_bt>100)) 
0898:  BSF    F93.5
089A:  BTFSC  F81.5
089C:  BRA    08A8
089E:  MOVF   25,W
08A0:  SUBLW  64
08A2:  BC    08A8
....................    { 
....................       bt_flag_l = 1; 
08A4:  BSF    1E.4
....................       timer_bt=0; 
08A6:  CLRF   25
....................    } 
....................    if((bt_flag_l==1) && (bt_flag_h==1)) 
08A8:  BTFSS  1E.4
08AA:  BRA    08BE
08AC:  BTFSS  1E.3
08AE:  BRA    08BE
....................    { 
....................       if(mirror_st == 1) 
08B0:  BTFSS  1E.0
08B2:  BRA    08B8
....................       { 
....................          close_mirror_BT(); 
08B4:  BRA    0818
....................       } 
....................       else 
08B6:  BRA    08BA
....................       { 
....................          open_mirror_BT(); 
08B8:  BRA    0850
....................       } 
....................       bt_flag_l=0; 
08BA:  BCF    1E.4
....................       bt_flag_h=0; 
08BC:  BCF    1E.3
....................    }   
.................... } 
08BE:  GOTO   0A82 (RETURN)
.................... //=========================== 
.................... void main() 
.................... { 
*
09A4:  CLRF   FF8
09A6:  BCF    FD0.7
09A8:  BSF    07.7
09AA:  CLRF   FEA
09AC:  CLRF   FE9
09AE:  MOVLW  72
09B0:  MOVWF  FD3
09B2:  MOVF   FD3,W
09B4:  BCF    F92.1
09B6:  BSF    F89.1
09B8:  CLRF   1B
09BA:  CLRF   1A
09BC:  CLRF   1D
09BE:  MOVLW  05
09C0:  MOVWF  1C
09C2:  BCF    1E.0
09C4:  CLRF   1F
09C6:  CLRF   20
09C8:  MOVLW  0A
09CA:  MOVWF  21
09CC:  CLRF   22
09CE:  CLRF   23
09D0:  CLRF   24
09D2:  CLRF   25
09D4:  CLRF   26
09D6:  BCF    1E.1
09D8:  BCF    1E.2
09DA:  BCF    1E.3
09DC:  BCF    1E.4
09DE:  BCF    FC2.6
09E0:  BCF    FC2.7
09E2:  MOVF   FC1,W
09E4:  ANDLW  80
09E6:  IORLW  7F
09E8:  MOVWF  FC1
....................    setup_timer_0(T0_INTERNAL|T0_DIV_8|T0_8_BIT);      //1.0 ms overflow 
09EA:  MOVLW  C2
09EC:  MOVWF  FD5
....................    disable_interrupts(INT_TIMER0); 
09EE:  BCF    FF2.5
....................    disable_interrupts(INT_EXT_L2H); 
09F0:  BCF    FF2.4
....................    disable_interrupts(GLOBAL); 
09F2:  BCF    FF2.6
09F4:  BCF    FF2.7
09F6:  BTFSC  FF2.7
09F8:  BRA    09F4
....................    setup_oscillator(OSC_8MHZ|OSC_INTRC); 
09FA:  MOVLW  72
09FC:  MOVWF  FD3
09FE:  MOVF   FD3,W
....................     
....................    //setup_adc(ADC_CLOCK_DIV_64|ADC_TAD_MUL_2|VSS_VDD); 
....................    //setup_adc_ports(sAN0|sAN2); 
....................    //set_adc_channel(0); 
....................    //set_pwm1_duty(1); 
....................    
....................    //delay_ms(1000); 
....................    ext_int_edge( L_TO_H ); 
0A00:  BSF    FF1.6
....................    enable_interrupts(INT_EXT); 
0A02:  BSF    FF2.4
....................    enable_interrupts(INT_TIMER0); 
0A04:  BSF    FF2.5
....................    enable_interrupts(GLOBAL); 
0A06:  MOVLW  C0
0A08:  IORWF  FF2,F
....................     
....................    output_high(Keep_PWR); 
0A0A:  BCF    F93.4
0A0C:  BSF    F8A.4
....................    open_mirror_remote();   
0A0E:  RCALL  0726
....................     
....................    fprintf(DEBUG,"Start...\r\n"); 
0A10:  MOVLW  96
0A12:  MOVWF  FF6
0A14:  MOVLW  05
0A16:  MOVWF  FF7
0A18:  CLRF   19
0A1A:  BTFSC  FF2.7
0A1C:  BSF    19.7
0A1E:  BCF    FF2.7
0A20:  RCALL  046C
0A22:  BTFSC  19.7
0A24:  BSF    FF2.7
....................    delay_ms(1000); 
0A26:  MOVLW  04
0A28:  MOVWF  27
0A2A:  MOVLW  FA
0A2C:  MOVWF  28
0A2E:  RCALL  0780
0A30:  DECFSZ 27,F
0A32:  BRA    0A2A
....................     while(1) 
....................     { 
....................       if(input(ACC_CHECK)==0) 
0A34:  BSF    F93.3
0A36:  BTFSC  F81.3
0A38:  BRA    0A78
....................       { 
....................          if((second_refer>2)&&(input(ACC_CHECK)==0)) 
0A3A:  MOVF   26,W
0A3C:  SUBLW  02
0A3E:  BC    0A76
0A40:  BSF    F93.3
0A42:  BTFSC  F81.3
0A44:  BRA    0A76
....................          { 
....................             //door_unlock(); 
....................             if((input(Lock_SIG)==1)&&(input(UnLock_SIG)==0)) 
0A46:  BSF    F93.2
0A48:  BTFSS  F81.2
0A4A:  BRA    0A60
0A4C:  BSF    F93.1
0A4E:  BTFSC  F81.1
0A50:  BRA    0A60
....................             { 
....................                //fprintf(DEBUG,"lock is low %lu\r\n, ", count_s); 
....................             sleeping(10); 
0A52:  MOVLW  0A
0A54:  MOVWF  28
0A56:  RCALL  06F4
....................                if(close_mirror_remote()==1) 
0A58:  RCALL  07A6
0A5A:  DECFSZ 01,W
0A5C:  BRA    0A60
....................                { 
....................                    open_mirror_remote(); 
0A5E:  RCALL  0726
....................                } 
....................             } 
....................             if((input(UnLock_SIG)==1)&&(input(Lock_SIG)==0)) 
0A60:  BSF    F93.1
0A62:  BTFSS  F81.1
0A64:  BRA    0A74
0A66:  BSF    F93.2
0A68:  BTFSC  F81.2
0A6A:  BRA    0A74
....................             { 
....................                //fprintf(DEBUG,"unlock is low %lu\r\n, ", count_s); 
....................                if(open_mirror_remote()==1) 
0A6C:  RCALL  0726
0A6E:  DECFSZ 01,W
0A70:  BRA    0A74
....................                { 
....................                   close_mirror_remote(); 
0A72:  RCALL  07A6
....................                } 
....................             } 
....................             door_unlock(); 
0A74:  BRA    07F8
....................          } 
....................       } 
....................       else 
0A76:  BRA    0AF6
....................       { 
....................          if(input(ACC_CHECK)==1) 
0A78:  BSF    F93.3
0A7A:  BTFSS  F81.3
0A7C:  BRA    0AB8
....................          { 
....................             second_refer=0; 
0A7E:  CLRF   26
....................             button_touching(); 
0A80:  BRA    0888
....................             if(speed>20) 
0A82:  MOVF   23,W
0A84:  SUBLW  14
0A86:  BC    0A98
....................             { 
....................                 if(repeat_check_speed<10) 
0A88:  MOVF   24,W
0A8A:  SUBLW  09
0A8C:  BNC   0A92
....................                 { 
....................                     repeat_check_speed++; 
0A8E:  INCF   24,F
....................                 } 
....................                 else 
0A90:  BRA    0A96
....................                 { 
....................                     door_lock(); 
0A92:  BRA    08C2
....................                     open_mirror_speedover(); 
0A94:  BRA    08E2
....................                 } 
....................             } 
....................             else 
0A96:  BRA    0A9A
....................             { 
....................                //door_unlock(); 
....................                repeat_check_speed=0; 
0A98:  CLRF   24
....................             } 
....................             if((input(UnLock_SIG)==1)&&(input(Lock_SIG)==0)) 
0A9A:  BSF    F93.1
0A9C:  BTFSS  F81.1
0A9E:  BRA    0AAA
0AA0:  BSF    F93.2
0AA2:  BTFSC  F81.2
0AA4:  BRA    0AAA
....................             { 
....................                door_lock_flag = 0; 
0AA6:  BCF    1E.2
....................             } 
....................             else if((input(Lock_SIG)==1)&&(input(UnLock_SIG)==0)) 
0AA8:  BRA    0AB8
0AAA:  BSF    F93.2
0AAC:  BTFSS  F81.2
0AAE:  BRA    0AB8
0AB0:  BSF    F93.1
0AB2:  BTFSC  F81.1
0AB4:  BRA    0AB8
....................             { 
....................                door_lock_flag = 1; 
0AB6:  BSF    1E.2
....................             } 
....................          } 
....................        fprintf(DEBUG,"speed = %u, pulse = %u\r\n, ", speed,count_pulse); 
0AB8:  MOVLW  A2
0ABA:  MOVWF  FF6
0ABC:  MOVLW  05
0ABE:  MOVWF  FF7
0AC0:  MOVLW  08
0AC2:  MOVWF  29
0AC4:  RCALL  05C6
0AC6:  MOVFF  23,27
0ACA:  MOVLW  1B
0ACC:  MOVWF  28
0ACE:  RCALL  091A
0AD0:  MOVLW  AC
0AD2:  MOVWF  FF6
0AD4:  MOVLW  05
0AD6:  MOVWF  FF7
0AD8:  MOVLW  0A
0ADA:  MOVWF  29
0ADC:  RCALL  05C6
0ADE:  MOVFF  1F,27
0AE2:  MOVLW  1B
0AE4:  MOVWF  28
0AE6:  RCALL  091A
0AE8:  MOVLW  B8
0AEA:  MOVWF  FF6
0AEC:  MOVLW  05
0AEE:  MOVWF  FF7
0AF0:  MOVLW  04
0AF2:  MOVWF  29
0AF4:  RCALL  05C6
....................       }      
....................       delay_ms(50); 
0AF6:  MOVLW  32
0AF8:  MOVWF  28
0AFA:  RCALL  0780
....................     } 
0AFC:  BRA    0A34
.................... } 
0AFE:  SLEEP 

Configuration Fuses:
   Word  1: C800   INTRC_IO FCMEN IESO
   Word  2: 1E0D   NOPUT NOBROWNOUT NOWDT WDT32768
   Word  3: 0000   NOMCLR
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C003   NOPROTECT NOCPB NOCPD
   Word  6: E003   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 4003   NOEBTR NOEBTRB
