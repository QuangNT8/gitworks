C L "MAIN" 0 285 1 "*"
D G "__PCH__" 0 289 ""4.140""
D G "__DEVICE__" 0 289 "0"
D G "__DATE__" 0 289 ""27-Jul-18""
D G "__TIME__" 0 289 ""18:12:56""
D G "LED" 0 2 "PIN_A6"
D G "dis_rev" 1 5 "#ASM BCF    0xF94.7 #ENDASM"
D G "24AA512" 1 8 ""
D G "nocheckpass" 1 10 ""
D G "debug" 1 11 ""
D G "debugkb" 1 12 ""
D G "PIC26" 1 14 ""
d G "PIN_A0" 2 27 "31744"
d G "PIN_A1" 2 28 "31745"
d G "PIN_A2" 2 29 "31746"
d G "PIN_A3" 2 30 "31747"
d G "PIN_A5" 2 31 "31749"
d G "PIN_A6" 2 32 "31750"
d G "PIN_A7" 2 33 "31751"
d G "PIN_B0" 2 35 "31752"
d G "PIN_B1" 2 36 "31753"
d G "PIN_B2" 2 37 "31754"
d G "PIN_B3" 2 38 "31755"
d G "PIN_B4" 2 39 "31756"
d G "PIN_B5" 2 40 "31757"
d G "PIN_B6" 2 41 "31758"
d G "PIN_B7" 2 42 "31759"
d G "PIN_C0" 2 44 "31760"
d G "PIN_C1" 2 45 "31761"
d G "PIN_C2" 2 46 "31762"
d G "PIN_C3" 2 47 "31763"
d G "PIN_C4" 2 48 "31764"
d G "PIN_C5" 2 49 "31765"
d G "PIN_C6" 2 50 "31766"
d G "PIN_C7" 2 51 "31767"
d G "FALSE" 2 54 "0"
d G "TRUE" 2 55 "1"
d G "BYTE" 2 57 "int8"
d G "BOOLEAN" 2 58 "int1"
d G "getc" 2 60 "getch"
d G "fgetc" 2 61 "getch"
d G "getchar" 2 62 "getch"
d G "putc" 2 63 "putchar"
d G "fputc" 2 64 "putchar"
d G "fgets" 2 65 "gets"
d G "fputs" 2 66 "puts"
d G "WDT_TIMEOUT" 2 71 "7"
d G "MCLR_FROM_SLEEP" 2 72 "11"
d G "MCLR_FROM_RUN" 2 73 "15"
d G "NORMAL_POWER_UP" 2 74 "12"
d G "BROWNOUT_RESTART" 2 75 "14"
d G "WDT_FROM_SLEEP" 2 76 "3"
d G "RESET_INSTRUCTION" 2 77 "0"
d G "POR_FROM_DS" 2 79 "0x0100"
d G "MCLR_FROM_DS" 2 80 "0x0400"
d G "RTC_FROM_DS" 2 81 "0x0800"
d G "DSWDT_FROM_DS" 2 82 "0x1000"
d G "ULPWU_FROM_DS" 2 83 "0x2000"
d G "FAULT_FROM_DS" 2 84 "0x8000"
d G "EXT_FROM_DS" 2 85 "0x0200"
d G "DEEP_SLEEP" 2 88 "3"
d G "WAKE_FROM_RTCC" 2 90 "4" "Wake-up from RTCC is enabled"
d G "WAKE_FROM_ULP" 2 91 "8" "ULPWU module is enabled in Deep Sleep"
d G "REG_LOW_POWER" 2 97 "2"
d G "REG_NORMAL" 2 98 "0" "default"
d G "SLEEP_FULL" 2 101 "0" "Default"
d G "SLEEP_IDLE" 2 102 "1" "Clock and peripherals don't stop"
d G "T0_INTERNAL" 2 109 "0"
d G "T0_EXT_L_TO_H" 2 110 "32"
d G "T0_EXT_H_TO_L" 2 111 "48"
d G "T0_DIV_1" 2 113 "8"
d G "T0_DIV_2" 2 114 "0"
d G "T0_DIV_4" 2 115 "1"
d G "T0_DIV_8" 2 116 "2"
d G "T0_DIV_16" 2 117 "3"
d G "T0_DIV_32" 2 118 "4"
d G "T0_DIV_64" 2 119 "5"
d G "T0_DIV_128" 2 120 "6"
d G "T0_DIV_256" 2 121 "7"
d G "T0_OFF" 2 123 "0x80"
d G "T0_8_BIT" 2 125 "0x40"
d G "RTCC_INTERNAL" 2 127 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 2 128 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 2 129 "48"
d G "RTCC_DIV_1" 2 130 "8"
d G "RTCC_DIV_2" 2 131 "0"
d G "RTCC_DIV_4" 2 132 "1"
d G "RTCC_DIV_8" 2 133 "2"
d G "RTCC_DIV_16" 2 134 "3"
d G "RTCC_DIV_32" 2 135 "4"
d G "RTCC_DIV_64" 2 136 "5"
d G "RTCC_DIV_128" 2 137 "6"
d G "RTCC_DIV_256" 2 138 "7"
d G "RTCC_OFF" 2 139 "0x80"
d G "RTCC_8_BIT" 2 140 "0x40"
d G "WDT_ON" 2 151 "0x100"
d G "WDT_OFF" 2 152 "0"
d G "T1_DISABLED" 2 158 "0"
d G "T1_INTERNAL" 2 159 "0x07"
d G "T1_EXTERNAL" 2 160 "0x87"
d G "T1_EXTERNAL_SYNC" 2 161 "0x83"
d G "T1_FOSC" 2 162 "0x47"
d G "T1_ENABLE_T1OSC" 2 164 "0x08"
d G "T1_DIV_BY_1" 2 166 "0"
d G "T1_DIV_BY_2" 2 167 "0x10"
d G "T1_DIV_BY_4" 2 168 "0x20"
d G "T1_DIV_BY_8" 2 169 "0x30"
d G "T1_GATE" 2 171 "0x8000"
d G "T1_GATE_INVERTED" 2 172 "0xC000"
d G "T1_GATE_TOGGLE" 2 173 "0xA000"
d G "T1_GATE_SINGLE" 2 174 "0x9000"
d G "T1_GATE_TIMER0" 2 175 "0x8100"
d G "T1_GATE_TIMER2" 2 176 "0x8200"
d G "T2_DISABLED" 2 181 "0"
d G "T2_DIV_BY_1" 2 182 "4"
d G "T2_DIV_BY_4" 2 183 "5"
d G "T2_DIV_BY_16" 2 184 "6"
d G "T3_DISABLED" 2 190 "0"
d G "T3_INTERNAL" 2 191 "0x07"
d G "T3_INTERNAL_TIMES_4" 2 192 "0x47"
d G "T3_EXTERNAL" 2 193 "0x87"
d G "T3_EXTERNAL_SYNC" 2 194 "0x83"
d G "T3_ENABLE_T1OSC" 2 196 "0x08"
d G "T3_DIV_BY_1" 2 198 "0"
d G "T3_DIV_BY_2" 2 199 "0x10"
d G "T3_DIV_BY_4" 2 200 "0x20"
d G "T3_DIV_BY_8" 2 201 "0x30"
d G "T3_GATE" 2 203 "0x8000"
d G "T3_GATE_INVERTED" 2 204 "0xC000"
d G "T3_GATE_TOGGLE" 2 205 "0xA000"
d G "T3_GATE_SINGLE" 2 206 "0x9000"
d G "T3_GATE_TIMER0" 2 207 "0x8100"
d G "T3_GATE_TIMER2" 2 208 "0x8200"
d G "T4_DISABLED" 2 214 "0"
d G "T4_DIV_BY_1" 2 215 "4"
d G "T4_DIV_BY_4" 2 216 "5"
d G "T4_DIV_BY_16" 2 217 "6"
t G "rtc_time_t" 2 233 "{int8 tm_year,int8 tm_yday,int8 tm_mday,int8 tm_mon,int8 tm_hour,int8 tm_wday,int8 tm_sec,int8 tm_min,int8 tm_isdst}" "Constants used in setup_rtc() are:  // Second param is calibration"
d G "RTC_ENABLE" 2 236 "0x8000"
d G "RTC_DISABLE" 2 237 "0"
d G "RTC_OUTPUT_SOURCE" 2 238 "0x20400"
d G "RTC_OUTPUT_SECONDS" 2 239 "0x10400"
d G "RTC_OUTPUT_ALARM" 2 240 "0x00400"
d G "RTC_ALARM_ENABLE" 2 243 "0x80"
d G "RTC_ALARM_DISABLE" 2 244 "0"
d G "RTC_CHIME_ENABLE" 2 245 "0x40"
d G "RTC_CHIME_DISABLE" 2 246 "0"
d G "RTC_ALARM_HALFSECOND" 2 248 "0x00"
d G "RTC_ALARM_SECOND" 2 249 "0x04"
d G "RTC_ALARM_10_SECONDS" 2 250 "0x08"
d G "RTC_ALARM_MINUTE" 2 251 "0x0C"
d G "RTC_ALARM_10_MINUTES" 2 252 "0x10"
d G "RTC_ALARM_HOUR" 2 253 "0x14"
d G "RTC_ALARM_DAY" 2 254 "0x18"
d G "RTC_ALARM_WEEK" 2 255 "0x1C"
d G "RTC_ALARM_MONTH" 2 256 "0x20"
d G "RTC_ALARM_YEAR" 2 257 "0x24"
d G "CCP_OFF" 2 263 "0"
d G "CCP_CAPTURE_FE" 2 264 "4"
d G "CCP_CAPTURE_RE" 2 265 "5"
d G "CCP_CAPTURE_DIV_4" 2 266 "6"
d G "CCP_CAPTURE_DIV_16" 2 267 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 268 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 269 "9"
d G "CCP_COMPARE_INT" 2 270 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 271 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 272 "0xB"
d G "CCP_PWM" 2 273 "0xC"
d G "CCP_PWM_PLUS_1" 2 274 "0x1c"
d G "CCP_PWM_PLUS_2" 2 275 "0x2c"
d G "CCP_PWM_PLUS_3" 2 276 "0x3c"
d G "T3_CCP1_TO_2" 2 282 "0x0200"
d G "T3_CCP1" 2 283 "0x0100"
d G "CCP_PWM_H_H" 2 286 "0x0c"
d G "CCP_PWM_H_L" 2 287 "0x0d"
d G "CCP_PWM_L_H" 2 288 "0x0e"
d G "CCP_PWM_L_L" 2 289 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 291 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 292 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 293 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 295 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 296 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 297 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 298 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 299 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 300 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 301 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 303 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 304 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 305 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 307 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 308 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 309 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 311 "0x80000000"
d G "CCP_PULSE_STEERING_A" 2 313 "0x01000000"
d G "CCP_PULSE_STEERING_B" 2 314 "0x02000000"
d G "CCP_PULSE_STEERING_C" 2 315 "0x04000000"
d G "CCP_PULSE_STEERING_D" 2 316 "0x08000000"
d G "CCP_PULSE_STEERING_SYNC" 2 317 "0x10000000"
d G "SPI_DISABLED" 2 325 "0x00"
d G "SPI_MASTER" 2 326 "0x20"
d G "SPI_SLAVE" 2 327 "0x24"
d G "SPI_SCK_IDLE_HIGH" 2 328 "0x10"
d G "SPI_SCK_IDLE_LOW" 2 329 "0x00"
d G "SPI_CLK_DIV_4" 2 330 "0x00"
d G "SPI_CLK_DIV_16" 2 331 "0x01"
d G "SPI_CLK_DIV_64" 2 332 "0x02"
d G "SPI_CLK_T2" 2 333 "0x03"
d G "SPI_SS_DISABLED" 2 334 "0x01"
d G "SPI_XMIT_L_TO_H" 2 336 "0x4000"
d G "SPI_XMIT_H_TO_L" 2 337 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 2 339 "0x0000"
d G "SPI_SAMPLE_AT_END" 2 340 "0x8000"
d G "SPI_L_TO_H" 2 343 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 2 344 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 2 350 "2"
d G "UART_DATA" 2 351 "4"
d G "UART_AUTODETECT" 2 352 "8"
d G "UART_AUTODETECT_NOWAIT" 2 353 "9"
d G "UART_WAKEUP_ON_RDA" 2 354 "10"
d G "UART_SEND_BREAK" 2 355 "13"
d G "NC_NC_NC_NC" 2 360 "0x00"
d G "NC_NC" 2 361 "0x00"
d G "CP1_VREF_F6" 2 364 "0x83"
d G "CP1_F5_F6" 2 365 "0x80"
d G "CP1_VREF_VREF" 2 366 "0x87"
d G "CP1_F5_VREF" 2 367 "0x84"
d G "CP1_OUT_ON_F2" 2 369 "0x40"
d G "CP1_INVERT" 2 370 "0x20"
d G "CP1_INT_H_TO_L" 2 371 "0x10"
d G "CP1_INT_L_TO_H" 2 372 "0x08"
d G "CP2_VREF_F4" 2 375 "0x8300"
d G "CP2_F3_F4" 2 376 "0x8000"
d G "CP2_VREF_VREF" 2 377 "0x8700"
d G "CP2_F3_VREF" 2 378 "0x8400"
d G "CP2_OUT_ON_F1" 2 380 "0x4000"
d G "CP2_INVERT" 2 381 "0x2000"
d G "CP2_INT_H_TO_L" 2 382 "0x1000"
d G "CP2_INT_L_TO_H" 2 383 "0x0800"
d G "VREF_LOW" 2 391 "0xa0"
d G "VREF_HIGH" 2 392 "0x80"
d G "VREF_F5" 2 394 "0x40"
d G "VREF_COMP" 2 395 "0x10"
d G "OSC_31KHZ" 2 401 "0"
d G "OSC_125KHZ" 2 402 "0x10"
d G "OSC_250KHZ" 2 403 "0x20"
d G "OSC_500KHZ" 2 404 "0x30"
d G "OSC_1MHZ" 2 405 "0x40"
d G "OSC_2MHZ" 2 406 "0x50"
d G "OSC_4MHZ" 2 407 "0x60"
d G "OSC_8MHZ" 2 408 "0x70"
d G "OSC_16MHZ" 2 409 "0x4060"
d G "OSC_32MHZ" 2 410 "0x4070"
d G "OSC_TIMER1" 2 412 "1"
d G "OSC_INTRC" 2 413 "2"
d G "OSC_NORMAL" 2 414 "0"
d G "OSC_IDLE_MODE" 2 416 "0x80"
d G "OSC_31250" 2 417 "0x8000"
d G "OSC_PLL_ON" 2 418 "0x4000"
d G "OSC_PLL_OFF" 2 419 "0"
d G "OSC_STATE_STABLE" 2 423 "4"
d G "OSC_STATE_EXT_RUNNING" 2 424 "8"
d G "ADC_OFF" 2 431 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 432 "0x100"
d G "ADC_CLOCK_DIV_4" 2 433 "0x04"
d G "ADC_CLOCK_DIV_8" 2 434 "0x01"
d G "ADC_CLOCK_DIV_16" 2 435 "0x05"
d G "ADC_CLOCK_DIV_32" 2 436 "0x02"
d G "ADC_CLOCK_DIV_64" 2 437 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 438 "0x03" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 440 "0x00"
d G "ADC_TAD_MUL_2" 2 441 "0x08"
d G "ADC_TAD_MUL_4" 2 442 "0x10"
d G "ADC_TAD_MUL_6" 2 443 "0x18"
d G "ADC_TAD_MUL_8" 2 444 "0x20"
d G "ADC_TAD_MUL_12" 2 445 "0x28"
d G "ADC_TAD_MUL_16" 2 446 "0x30"
d G "ADC_TAD_MUL_20" 2 447 "0x38"
d G "sAN12" 2 452 "0x10" "| B0"
d G "sAN11" 2 453 "0x8" "| C2"
d G "sAN10" 2 454 "0x4" "| B1"
d G "sAN9" 2 455 "0x2" "| B3"
d G "sAN8" 2 456 "0x1" "| B2"
d G "sAN4" 2 457 "0x100000" "| A5"
d G "sAN3" 2 458 "0x80000" "| A3"
d G "sAN2" 2 459 "0x40000" "| A2"
d G "sAN1" 2 460 "0x20000" "| A1"
d G "sAN0" 2 461 "0x10000" "| A0"
d G "NO_ANALOGS" 2 462 "0x0" "None"
d G "ALL_ANALOG" 2 463 "0xff00ff" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 C2 B0"
d G "VSS_VDD" 2 466 "0x0000" "| Range 0-Vdd"
d G "VSS_VREF" 2 467 "0x4000" "| Range 0-Vref"
d G "VREF_VREF" 2 468 "0xc000" "| Range Vref-Vref"
d G "VREF_VDD" 2 469 "0x8000" "| Range Vref-Vdd"
d G "ADC_START_AND_READ" 2 473 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 474 "1"
d G "ADC_READ_ONLY" 2 475 "6"
d G "L_TO_H" 2 483 "0x40"
d G "H_TO_L" 2 484 "0"
d G "GLOBAL" 2 486 "0xF2C0"
d G "PERIPH" 2 487 "0xF240"
d G "INT_RTCC" 2 488 "0x00F220"
d G "INT_TIMER0" 2 489 "0x00F220"
d G "INT_TIMER1" 2 490 "0x009D01"
d G "INT_TIMER2" 2 491 "0x009D02"
d G "INT_TIMER3" 2 492 "0x00A002"
d G "INT_EXT_L2H" 2 493 "0x5000F210"
d G "INT_EXT_H2L" 2 494 "0x6000F210"
d G "INT_EXT" 2 495 "0x00F210"
d G "INT_EXT1_L2H" 2 496 "0x5001F008"
d G "INT_EXT1_H2L" 2 497 "0x6001F008"
d G "INT_EXT1" 2 498 "0x00F008"
d G "INT_EXT2_L2H" 2 499 "0x5002F010"
d G "INT_EXT2_H2L" 2 500 "0x6002F010"
d G "INT_EXT2" 2 501 "0x00F010"
d G "INT_RB" 2 502 "0x00FFF208"
d G "INT_AD" 2 503 "0x009D40"
d G "INT_RDA" 2 504 "0x009D20"
d G "INT_TBE" 2 505 "0x009D10"
d G "INT_SSP" 2 506 "0x009D08"
d G "INT_CCP1" 2 507 "0x009D04"
d G "INT_CCP2" 2 508 "0x00A001"
d G "INT_BUSCOL" 2 509 "0x00A008"
d G "INT_COMP" 2 510 "0x00A040"
d G "INT_RDA2" 2 511 "0x00A320"
d G "INT_TBE2" 2 512 "0x00A310"
d G "INT_TIMER4" 2 513 "0x00A308"
d G "INT_OSCF" 2 514 "0x00A080"
d G "INT_HLVD" 2 515 "0x00A004"
d G "INT_BUSCOL2" 2 516 "0x00A340"
d G "INT_EXT3_L2H" 2 517 "0x5003F020"
d G "INT_EXT3_H2L" 2 518 "0x6003F020"
d G "INT_EXT3" 2 519 "0x00F020"
d G "INT_SSP2" 2 520 "0x00A380"
d G "INT_RTC" 2 521 "0x00A301"
D G "_STDLIB" 3 12 ""
D G "RAND_MAX" 3 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 3 25 "1"
T G "div_t" 3 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 3 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 18 "unsigned int16"
D G "size_t" 4 24 "unsigned int16"
D G "wchar_t" 4 26 "char"
D G "NULL" 4 27 "0"
D G "offsetof" 4 29 "(s,f) (offsetofbit(s,f)/8)"
C L "atoi" 3 43 2 "FUNCTION"
C L "atoi" 3 46 1 "*"
C L "atoi" 3 46 1 "*"
V L "s" 3 50 "*int8"
F G "atoi" 3 50 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 3 58 "*int8"
F G "atoi32" 3 58 "sint32(*int8 s)"
C L "atoi32" 3 46 3 "FUNCTION"
V L "num" 3 79 "sint32"
V L "base" 3 79 "int8"
V L "s" 3 79 "*int8"
F G "itoa" 3 79 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 3 81 1 "*"
C L "itoa" 3 81 1 "*"
V L "s" 3 85 "*int8"
F G "atol" 3 85 "sint16(*int8 s)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 3 87 1 "*"
C L "atol" 3 87 1 "*"
C L "atol" 3 87 1 "*"
C L "atol" 3 87 1 "*"
V L "s" 3 93 "*int8"
V L "endptr" 3 93 "*int8"
V L "base" 3 93 "sint8"
F G "strtol" 3 93 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 3 95 1 "*"
C L "strtol" 3 95 1 "*"
C L "strtol" 3 95 1 "*"
C L "strtol" 3 95 1 "*"
V L "s" 3 101 "*int8"
V L "endptr" 3 101 "*int8"
V L "base" 3 101 "sint8"
F G "strtoul" 3 101 "int16(*int8 s,*int8 endptr,sint8 base)" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 3 95 2 "FUNCTION"
C L "strtoul" 3 103 1 "*"
C L "strtoul" 3 103 1 "*"
C L "strtoul" 3 103 1 "*"
V L "s" 3 110 "*int8"
V L "endptr" 3 110 "*int8"
F G "strtof" 3 110 "float(*int8 s,*int8 endptr)"
D G "strtof48" 3 116 "(s, e) strtof(s, e)"
D G "strtod" 3 117 "(s, e) strtof(s, e)"
C L "strtof" 3 103 1 "FUNCTION"
C L "strtof" 3 120 1 "*"
D G "atof" 3 124 "(s)   strtof(s, 0)"
C L "strtof" 3 120 1 "FUNCTION"
C L "strtof" 3 143 1 "*"
C L "strtof" 3 143 1 "*"
C L "strtof" 3 143 1 "*"
V L "s" 3 149 "*int8"
F G "atoe" 3 149 "float(*int8 s)"
C L "atoe" 3 143 2 "FUNCTION"
C L "atoe" 3 160 1 "*"
C L "atoe" 3 160 1 "*"
C L "atoe" 3 160 1 "*"
C L "atoe" 3 160 1 "*"
C L "atoe" 3 160 1 "*"
F G "rand" 3 169 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
C L "rand" 3 171 1 "*"
V L "seed" 3 191 "int32"
F G "srand" 3 191 "void(int32 seed)" "Memory management functions"
C L "srand" 3 171 3 "FUNCTION"
V L "string" 3 205 "*int8"
F G "system" 3 205 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 3 171 1 "FUNCTION"
C L "system" 3 211 1 "*"
C L "system" 3 211 1 "*"
C L "system" 3 211 1 "*"
C L "system" 3 211 1 "*"
C L "system" 3 211 1 "*"
C L "system" 3 211 1 "*"
C L "system" 3 211 1 "*"
C L "system" 3 211 1 "*"
C L "system" 3 211 1 "*"
C L "system" 3 211 1 "*"
C L "system" 3 211 4 "*"
C L "system" 3 229 1 "*"
C L "system" 3 229 1 "*"
C L "system" 3 229 1 "*"
C L "system" 3 229 1 "*"
C L "system" 3 229 1 "*"
C L "system" 3 229 1 "*"
C L "system" 3 229 1 "*"
C L "system" 3 229 1 "*"
D G "labs" 3 249 "abs"
V L "numer" 3 251 "sint8"
V L "denom" 3 251 "sint8"
F G "div" 3 251 "div_t(sint8 numer,sint8 denom)"
V L "numer" 3 252 "sint16"
V L "denom" 3 252 "sint16"
F G "ldiv" 3 252 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 3 229 4 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
D G "_STRING" 5 12 ""
C L "ldiv" 4 2 7 "FUNCTION"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 5 19 10 "FUNCTION"
V L "s1" 5 34 "*int8"
V L "s2" 5 34 "*int8"
V L "n" 5 34 "int16"
F G "memmove" 5 34 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "sc1" 5 36 "*int8"
V L "sc2" 5 37 "*int8"
D G "strcopy" 5 54 "strcpy"
C L "strncpy" 5 19 4 "FUNCTION"
V L "s1" 5 61 "*int8"
V L "s2" 5 61 "*int8"
V L "n" 5 61 "int16"
F G "strncpy" 5 61 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 5 63 "*int8"
C L "strcat" 5 19 3 "FUNCTION"
V L "s1" 5 78 "*int8"
V L "s2" 5 78 "*int8"
F G "strcat" 5 78 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 80 "*int8"
C L "strncat" 5 19 2 "FUNCTION"
V L "s1" 5 96 "*int8"
V L "s2" 5 96 "*int8"
V L "n" 5 96 "int16"
F G "strncat" 5 96 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 5 98 "*int8"
C L "memcmp" 5 19 3 "FUNCTION"
V L "s1" 5 120 "*int8"
V L "s2" 5 120 "*int8"
V L "n" 5 120 "int16"
F G "memcmp" 5 120 "sint8(*int8 s1,*int8 s2,int16 n)"
V L "su1" 5 122 "*int8"
V L "su2" 5 122 "*int8"
C L "strcmp" 5 19 2 "FUNCTION"
V L "s1" 5 134 "*int8"
V L "s2" 5 134 "*int8"
F G "strcmp" 5 134 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 5 19 2 "FUNCTION"
V L "s1" 5 144 "*int8"
V L "s2" 5 144 "*int8"
F G "strcoll" 5 144 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 5 19 4 "FUNCTION"
V L "s1" 5 157 "*int8"
V L "s2" 5 157 "*int8"
V L "n" 5 157 "int16"
F G "strncmp" 5 157 "sint8(*int8 s1,*int8 s2,int16 n)"
C L "strxfrm" 5 19 3 "FUNCTION"
V L "s1" 5 169 "*int8"
V L "s2" 5 169 "*int8"
V L "n" 5 169 "int16"
F G "strxfrm" 5 169 "int16(*int8 s1,*int8 s2,int16 n)"
V L "s" 5 171 "*int8"
V L "n1" 5 172 "int8"
C L "memchr" 5 19 3 "FUNCTION"
V L "s" 5 191 "*int8"
V L "c" 5 191 "int8"
V L "n" 5 191 "int16"
F G "memchr" 5 191 "*int8(*int8 s,int8 c,int16 n)"
V L "uc" 5 193 "int8"
V L "su" 5 194 "*int8"
C L "strchr" 5 19 2 "FUNCTION"
V L "s" 5 205 "*int8"
V L "c" 5 205 "int8"
F G "strchr" 5 205 "*int8(*int8 s,int8 c)"
C L "strcspn" 5 19 4 "FUNCTION"
V L "s1" 5 217 "*int8"
V L "s2" 5 217 "*int8"
F G "strcspn" 5 217 "int8(*int8 s1,*int8 s2)"
V L "sc1" 5 219 "*int8"
V L "sc2" 5 219 "*int8"
C L "strpbrk" 5 19 4 "FUNCTION"
V L "s1" 5 232 "*int8"
V L "s2" 5 232 "*int8"
F G "strpbrk" 5 232 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 234 "*int8"
V L "sc2" 5 234 "*int8"
C L "strrchr" 5 19 2 "FUNCTION"
V L "s" 5 247 "*int8"
V L "c" 5 247 "int8"
F G "strrchr" 5 247 "*int8(*int8 s,int8 c)"
V L "p" 5 249 "*int8"
C L "strspn" 5 19 2 "FUNCTION"
V L "s1" 5 262 "*int8"
V L "s2" 5 262 "*int8"
F G "strspn" 5 262 "int8(*int8 s1,*int8 s2)"
V L "sc1" 5 264 "*int8"
V L "sc2" 5 264 "*int8"
C L "strstr" 5 19 6 "FUNCTION"
V L "s1" 5 281 "*int8"
V L "s2" 5 281 "*int8"
F G "strstr" 5 281 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 283 "*int8"
V L "t" 5 283 "*int8"
C L "strtok" 5 19 13 "FUNCTION"
V L "s1" 5 320 "*int8"
V L "s2" 5 320 "*int8"
F G "strtok" 5 320 "*int8(*int8 s1,*int8 s2)"
V L "beg" 5 322 "*int8"
V L "end" 5 322 "*int8"
V L "save" 5 323 "*int8"
C L "strlen" 5 19 6 "FUNCTION"
V L "s" 5 369 "*int8"
F G "strlen" 5 369 "int8(*int8 s)"
V L "sc" 5 371 "*int8"
C L "stricmp" 5 19 2 "FUNCTION"
V L "s1" 5 380 "*int8"
V L "s2" 5 380 "*int8"
F G "stricmp" 5 380 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 5 19 3 "FUNCTION"
V L "s" 5 394 "*int8"
F G "strlwr" 5 394 "*int8(*int8 s)"
V L "p" 5 396 "*int8"
C L "strupr" 5 19 3 "FUNCTION"
V L "s" 5 408 "*int8"
F G "strupr" 5 408 "*int8(*int8 s)"
V L "p" 5 410 "*int8"
V L "numer" 3 274 "sint8"
V L "denom" 3 274 "sint8"
F G "div" 3 274 "div_t(sint8 numer,sint8 denom,sint8 )"
V L "val" 3 276 "div_t"
V L "numer" 3 282 "sint16"
V L "denom" 3 282 "sint16"
F G "ldiv" 3 282 "ldiv_t(sint16 numer,sint16 denom,sint16 )"
V L "val" 3 284 "ldiv_t"
V L "s" 3 361 "*int8"
F G "atoe" 3 361 "float(*int8 s)"
V L "pow10" 3 363 "float"
V L "result" 3 364 "float"
V L "sign" 3 365 "int8"
V L "expsign" 3 366 "int8"
V L "c" 3 367 "int8"
V L "ptr" 3 368 "int8"
V L "i" 3 369 "int8"
V L "exp" 3 370 "float"
V L "expcnt" 3 371 "int8"
C L "atoe" 3 397 1 "FUNCTION"
V L "s" 3 429 "*int8"
F G "atoi" 3 429 "sint8(*int8 s)"
V L "result" 3 431 "sint8"
V L "sign" 3 432 "int8"
V L "base" 3 432 "int8"
V L "index" 3 432 "int8"
V L "c" 3 433 "int8"
C L "atoi" 3 397 1 "FUNCTION"
C L "atoi" 3 397 1 "FUNCTION"
C L "atoi" 3 397 1 "FUNCTION"
C L "atoi" 3 397 1 "FUNCTION"
C L "atoi" 3 397 1 "FUNCTION"
C L "atoi" 3 397 1 "FUNCTION"
V L "s" 3 498 "*int8"
F G "atol" 3 498 "sint16(*int8 s)"
V L "result" 3 500 "sint16"
V L "sign" 3 501 "int8"
V L "base" 3 501 "int8"
V L "index" 3 501 "int8"
V L "c" 3 502 "int8"
C L "atol" 3 397 1 "FUNCTION"
C L "atol" 3 397 1 "FUNCTION"
C L "atol" 3 397 1 "FUNCTION"
C L "atol" 3 397 1 "FUNCTION"
C L "mult_with10" 3 397 1 "FUNCTION"
V L "num" 3 565 "int32"
F G "mult_with10" 3 565 "sint32(int32 num)"
V L "s" 3 571 "*int8"
F G "atoi32" 3 571 "sint32(*int8 s)"
V L "result" 3 573 "sint32"
V L "sign" 3 574 "int8"
V L "base" 3 574 "int8"
V L "index" 3 574 "int8"
V L "c" 3 575 "int8"
C L "atoi32" 3 397 1 "FUNCTION"
C L "atoi32" 3 397 1 "FUNCTION"
C L "atoi32" 3 397 1 "FUNCTION"
C L "atoi32" 3 397 1 "FUNCTION"
C L "atoi32" 3 397 1 "FUNCTION"
V L "num" 3 770 "sint32"
V L "base" 3 770 "int8"
V L "s" 3 770 "*int8"
F G "itoa" 3 770 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 3 772 "int32"
V L "i" 3 773 "int8"
V L "sign" 3 773 "int8"
V L "cnt" 3 773 "int8"
V L "c" 3 774 "int8"
C L "itoa" 3 397 1 "FUNCTION"
C L "itoa" 3 397 1 "FUNCTION"
C L "itoa" 3 397 1 "FUNCTION"
C L "itoa" 3 397 1 "FUNCTION"
C L "itoa" 3 397 1 "FUNCTION"
V L "s" 3 885 "*int8"
V L "endptr" 3 885 "*int8"
F G "strtof" 3 885 "float(*int8 s,*int8 endptr)"
V L "pow10" 3 887 "float"
V L "result" 3 888 "float"
V L "skip" 3 889 "int1"
V L "sign" 3 889 "int1"
V L "point" 3 889 "int1"
V L "c" 3 890 "int8"
V L "ptr" 3 891 "int8"
V L "s" 3 1103 "*int8"
V L "endptr" 3 1103 "*int8"
V L "base" 3 1103 "sint8"
F G "strtoul" 3 1103 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 3 1105 "*int8"
V L "s1" 3 1105 "*int8"
V L "sd" 3 1105 "*int8"
V L "x" 3 1106 "int16"
V L "sign" 3 1107 "int8"
V L "digits" 3 1108 "int8[1]"
C L "strtoul" 3 397 1 "FUNCTION"
C L "strtoul" 3 397 1 "FUNCTION"
C L "strtoul" 3 397 1 "FUNCTION"
V L "s" 3 1165 "*int8"
V L "endptr" 3 1165 "*int8"
V L "base" 3 1165 "sint8"
F G "strtol" 3 1165 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 3 1167 "*int8"
V L "s1" 3 1167 "*int8"
V L "sd" 3 1167 "*int8"
V L "x" 3 1168 "sint16"
V L "sign" 3 1169 "int8"
V L "digits" 3 1170 "int8[1]"
C L "strtol" 3 397 1 "FUNCTION"
C L "strtol" 3 397 1 "FUNCTION"
C L "strtol" 3 397 1 "FUNCTION"
V L "string" 3 1228 "*int8"
F G "system" 3 1228 "sint8(*int8 string,int16 n)"
V L "s" 3 1233 "*int8"
V L "n" 3 1233 "int16"
F G "mblen" 3 1233 "int8(*int8 s,int16 n)"
V L "pwc" 3 1238 "*int8"
V L "s" 3 1238 "*int8"
V L "n" 3 1238 "int16"
F G "mbtowc" 3 1238 "int8(*int8 pwc,*int8 s,int16 n)"
V L "s" 3 1244 "*int8"
V L "wchar" 3 1244 "int8"
F G "wctomb" 3 1244 "int8(*int8 s,int8 wchar)"
V L "pwcs" 3 1250 "*int8"
V L "s" 3 1250 "*int8"
V L "n" 3 1250 "int16"
F G "mbstowcs" 3 1250 "int16(*int8 pwcs,*int8 s,int16 n)"
V L "s" 3 1256 "*int8"
V L "pwcs" 3 1256 "*int8"
V L "n" 3 1256 "int16"
F G "wcstombs" 3 1256 "int16(*int8 s,*int8 pwcs,int16 n)"
V G "_Randseed" 3 1266 "int32"
F G "rand" 3 1268 "int16(int16 ,int16 )"
V L "seed" 3 1274 "int32"
F G "srand" 3 1274 "void(int32 seed,*int8 p2)"
V L "p1" 3 1284 "*int8"
V L "p2" 3 1284 "*int8"
T G "*_Cmpfun" 3 1284 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 3 1291 "*int8"
V L "qitems" 3 1291 "int8"
V L "qsize" 3 1291 "int8"
V L "cmp" 3 1291 "_Cmpfun"
F G "qsort" 3 1291 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 3 1292 "int8"
V L "j" 3 1292 "int8"
V L "i" 3 1292 "int8"
V L "l" 3 1292 "int8"
V L "done" 3 1293 "int1"
V L "t" 3 1294 "int8[16]"
V L "key" 3 1319 "*int8"
V L "base" 3 1319 "*int8"
V L "num" 3 1319 "int16"
V L "width" 3 1319 "int16"
V L "cmp" 3 1319 "_Cmpfun"
F G "bsearch" 3 1319 "*int8(*int8 key,*int8 base,int16 num,int16 width,_Cmpfun cmp)"
V L "p" 3 1321 "*int8"
V L "q" 3 1321 "*int8"
V L "n" 3 1322 "int16"
V L "pivot" 3 1323 "int16"
V L "val" 3 1324 "sint8"
C L "bsearch" 3 397 1 "FUNCTION"
D G "EEPROM_SDA" 7 28 "PIN_C4"
D G "EEPROM_SCL" 7 29 "PIN_C3"
D G "ptr_start" 7 34 "150"
D G "EEPROM_SIZE_endofkey" 7 40 "65535" "65535 - 57601 = 7934/16= 450"
D G "EEPROM_SIZE_stofkey" 7 41 "57600" "57600/128 = 450"
D G "EEPROM_KEY_ST" 7 43 "EEPROM_SIZE_stofkey+1"
V G "ptr_card" 7 46 "int32"
V G "ptr_card_key" 7 47 "int32"
F G "init_ext_eeprom" 7 49 "void()"
V L "address" 7 56 "int32"
V L "data" 7 56 "int8"
F G "write_ext_eeprom" 7 56 "void(int32 address,int8 data)"
V L "status" 7 58 "int1"
V L "command" 7 59 "int8"
C L "write_ext_eeprom" 7 2 1 "FUNCTION"
C L "write_ext_eeprom" 7 2 1 "FUNCTION"
V L "address" 7 85 "int32"
F G "read_ext_eeprom" 7 85 "int8(int32 address)"
V L "data" 7 86 "int8"
V L "command" 7 87 "int8"
C L "read_ext_eeprom" 7 2 1 "FUNCTION"
D G "strobe_pass_addr" 8 5 "0"
D G "strobe_ptrcard_addr" 8 6 "25" "4 bytes"
D G "strobe_ptrcard_key" 8 7 "30" "4 bytes"
D G "strobe_count_card" 8 8 "36" "2 bytes"
D G "strobe_nameconsole" 8 9 "40" "16 bytes"
D G "strobe_Master_SLV" 8 10 "58" "1 byte"
D G "strobe_debugmode" 8 11 "59" "1 byte"
D G "strobe_delaytime" 8 12 "60" "1 byte"
D G "kindofKB" 8 13 "61" "1 byte"
D G "crypto_en" 8 14 "62" "1 byte"
D G "strobe_crypto_key" 8 15 "63" "32 byte"
D G "wide_strobe_nameconsole" 8 18 "16"
D G "numdata" 8 20 "124" "5+79+40=124"
D G "numdataofonecard" 8 21 "128"
D G "countcards" 8 26 "450" "43590/124"
V G "temp" 8 31 "int8[5]"
V G "buffer1" 8 32 "int8[20]"
V G "buffer2" 8 33 "int8[20]"
V G "password" 8 34 "int8[20]"
V G "entpassword" 8 35 "int8[20]"
V G "rec" 8 36 "int8[128]"
V G "countcard" 8 37 "int16"
V G "charac_timeout" 8 38 "int16"
C L "EEPROM_write" 8 39 1 "FUNCTION"
V L "adr" 8 52 "int32"
V L "len" 8 52 "int32"
V L "buf" 8 52 "*int8"
F G "EEPROM_write" 8 52 "int8(int32 adr,int32 len,*int8 buf)"
V L "i" 8 54 "int32"
V L "adr" 8 63 "int32"
V L "len" 8 63 "int32"
V L "buf" 8 63 "*int8"
F G "EEPROM_read" 8 63 "void(int32 adr,int32 len,*int8 buf)"
V L "i" 8 65 "int32"
V L "addr" 8 73 "int8"
F G "get_ptrcard" 8 73 "int32(int8 addr)"
V L "buffer" 8 75 "int32"
V L "temp1" 8 76 "int32"
V L "temp2" 8 76 "int32"
V L "temp3" 8 76 "int32"
V L "temp4" 8 76 "int32"
V L "ptr" 8 88 "int32"
V L "addr" 8 88 "int8"
F G "save_ptrcard" 8 88 "void(int32 ptr,int8 addr)"
V L "buffer" 8 90 "int32"
V L "temp1" 8 91 "int8"
V L "temp2" 8 91 "int8"
V L "temp3" 8 91 "int8"
V L "temp4" 8 91 "int8"
V L "ptr" 8 103 "int16"
F G "save_coutcard" 8 103 "void(int16 ptr)"
V L "buffer" 8 105 "int16"
V L "temp1" 8 106 "int8"
V L "temp2" 8 106 "int8"
F G "get_countcard" 8 114 "int16()"
V L "buffer" 8 116 "int16"
V L "temp1" 8 117 "int16"
V L "temp2" 8 117 "int16"
F G "format_eepromext" 8 125 "void()"
V L "i" 8 127 "int32" "fprintf(COM2," ptr_card_key=%lu\n\r",ptr_card_key);"
C L "format_eepromext" 8 39 9 "FUNCTION"
C L "format_eepromext" 8 39 3 "FUNCTION"
F G "ease_eeprom" 8 151 "void()"
V L "i" 8 153 "int32"
F G "init_password" 8 161 "void()"
F G "reset_password" 8 173 "void()"
V L "buf" 8 175 "int8[20]"
V L "i" 8 175 "int8"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 32 1 "*"
C G "" 11 32 1 "*"
C G "" 11 32 1 "*"
C G "" 11 32 1 "*"
D G "CRYPTO_KEY_SIZE" 11 42 "32"
V G "crypto_key" 11 44 "int8[33]"
V G "cryption_enable" 11 45 "int8"
V G "test_key" 11 47 "int8[16]"
V G "test_data" 11 50 "int8[16]"
V G "sbox" 11 54 "[1]" "0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F"
V G "rsbox" 11 74 "[1]"
V G "Rcon" 11 93 "[1]"
C L "galois_mul2" 11 32 1 "FUNCTION"
V L "value" 11 98 "int16"
F G "galois_mul2" 11 98 "int16(int16 value)"
V L "temp" 11 100 "sint16" "cast to signed value"
C L "galois_mul2" 11 32 1 "FUNCTION"
C L "galois_mul2" 11 32 1 "FUNCTION"
C L "galois_mul2" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 6 "FUNCTION"
V L "state" 11 117 "*int8"
V L "key" 11 117 "*int8"
V L "dir" 11 117 "int8"
F G "aes_enc_dec" 11 117 "void(*int8 state,*int8 key,int8 dir)"
V L "buf1" 11 119 "int8"
V L "buf2" 11 119 "int8"
V L "buf3" 11 119 "int8"
V L "buf4" 11 119 "int8"
V L "round" 11 119 "int8"
V L "i" 11 119 "int8" "In case of decryption"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 2 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
C L "aes_enc_dec" 11 32 1 "FUNCTION"
D G "COL0" 10 6 "PIN_A5"
D G "COL1" 10 7 "PIN_A3"
D G "COL2" 10 8 "PIN_A2"
D G "COL3" 10 9 "PIN_A1"
D G "COL4" 10 10 "PIN_A0"
D G "ROW0" 10 12 "PIN_B4"
D G "ROW1" 10 13 "PIN_B5"
D G "ROW2" 10 14 "PIN_B6"
D G "ROW3" 10 15 "PIN_B7"
D G "key" 10 17 "PIN_A7"
D G "turnoff_bgn_af30s" 10 23 "enable_interrupts(INT_RTCC);"
V G "KEYS" 10 28 "[4][5]"
V G "newKEYS" 10 34 "[4][6]"
D G "KBD_DEBOUNCE_FACTOR" 10 47 "1" "Set this number to apx n/333 where"
D G "wideofkeystore" 10 50 "16"
D G "key_numbyte" 10 51 "wideofkeystore-4"
V G "delaykey" 10 54 "int8"
V G "keydebug_en" 10 55 "int8"
V G "enable_getpin" 10 56 "int8"
V G "count_strobe_kb" 10 57 "int8"
V G "key_count_ms" 10 58 "int8"
V G "kp_st" 10 59 "int8"
V G "type_KB" 10 60 "int8"
V G "key_data" 10 62 "int8[16]"
V G "delaycharaction" 10 63 "int8"
F G "kbd_init" 10 64 "void()"
V L "tim" 10 67 "int32"
F G "delay_kb" 10 67 "void(int32 tim)"
V L "i" 10 69 "int32"
F G "kbd_getc" 10 74 "int8()"
V L "kbd_call_count" 10 75 "int8"
V L "kbd_down" 10 76 "int1"
V L "last_key" 10 77 "int8"
V L "col" 10 78 "int8"
V L "kchar" 10 79 "int8"
V L "row" 10 80 "int8" "kchar='t';//'\0';"
C L "kbd_getc" 10 20 1 "FUNCTION"
C L "kbd_getc" 10 20 2 "FUNCTION"
C L "kbd_getc" 10 20 2 "FUNCTION"
C L "kbd_getc" 10 20 2 "FUNCTION"
V L "col" 10 172 "int8"
F G "read_col" 10 172 "int8(int8 col)"
V L "adc" 10 174 "int8"
F G "check_col" 10 212 "int8()"
V L "i" 10 214 "int16"
V L "col_0" 10 215 "int32"
V L "col_1" 10 215 "int32"
V L "col_2" 10 215 "int32"
V L "col_3" 10 215 "int32"
V L "col_4" 10 215 "int32"
C L "check_col" 10 20 1 "FUNCTION"
C L "check_col" 10 241 1 "*"
C L "check_col" 10 241 11 "FUNCTION"
F G "new_check_col" 10 264 "int8()"
V L "i" 10 266 "int16"
V L "col_0" 10 267 "int32"
V L "col_1" 10 267 "int32"
V L "col_2" 10 267 "int32"
V L "col_3" 10 267 "int32"
V L "col_4" 10 267 "int32"
V L "col_5" 10 267 "int32"
C L "new_check_col" 10 241 1 "FUNCTION"
C L "new_check_col" 10 296 1 "*"
V G "KB_count" 10 309 "int8"
F G "kbd_getc_slv" 10 311 "int8()"
V L "kbd_call_count" 10 312 "int8"
V L "kbd_down" 10 313 "int1"
V L "last_key" 10 314 "int8"
V L "col" 10 315 "int8"
V L "kchar" 10 316 "int8"
V L "row" 10 317 "int8"
C L "kbd_getc_slv" 10 296 2 "FUNCTION"
C L "kbd_getc_slv" 10 296 1 "FUNCTION"
C L "save_key_new" 10 353 1 "*"
F G "save_key_new" 10 356 "void()"
V L "i" 10 358 "int8"
V L "tempdata" 10 358 "int8"
V L "temp" 10 359 "int16"
C L "save_key_new" 10 353 1 "FUNCTION"
C L "save_key_new" 10 353 1 "FUNCTION"
C L "save_key_new" 10 353 1 "FUNCTION"
C L "save_key_new" 10 353 6 "FUNCTION"
C L "save_key_new" 10 353 1 "FUNCTION"
C L "save_key_new" 10 353 1 "FUNCTION"
F G "save_key_encrypt" 10 398 "void()"
V L "i" 10 400 "int8"
V L "temp" 10 401 "int16"
V L "retval" 10 402 "int8"
V L "recEn" 10 403 "int8[16]"
C L "save_key_encrypt" 10 353 2 "FUNCTION"
C L "save_key_encrypt" 10 353 2 "FUNCTION"
D G "NO_ECHO" 12 2 "0"
D G "EN_ECHO" 12 3 "1"
D G "STAR_ECHO" 12 4 "2"
D G "FAUX" 12 5 "0"
D G "VRAI" 12 6 "1"
V G "buffer_uart" 12 8 "int8[100]"
V G "UART_index" 12 9 "int8"
V G "sms_unread_flag" 12 10 "int8"
V L "echo" 12 13 "int8"
V L "nbcarmax" 12 13 "int8"
V L "chaine" 12 13 "*int8"
F G "USART_getstring" 12 13 "int8(int8 echo,int8 nbcarmax,*int8 chaine)"
V L "c" 12 15 "int8"
V L "i" 12 15 "int8"
V L "nbcar" 12 16 "int16"
V L "fini" 12 17 "int8"
C L "USART_getstring" 12 21 1 "FUNCTION"
C L "USART_getstring" 12 21 1 "FUNCTION"
C L "USART_getstring" 12 21 1 "FUNCTION"
C L "USART_getstring" 12 21 2 "FUNCTION"
V L "a" 12 59 "*int8"
V L "b" 12 59 "*int8"
F G "stringcomp" 12 59 "int8(*int8 a,*int8 b)"
V L "aa" 12 61 "*int8"
V L "bb" 12 62 "*int8"
V L "str" 12 75 "*int8"
F G "strtoi" 12 75 "int16(*int8 str)"
V L "val" 12 77 "int8"
V L "digit" 12 77 "int8"
V L "c" 12 78 "int8"
D G "MCR_CARD_PRESENT" 13 12 "PIN_B0"
D G "MCR_DATA1" 13 13 "PIN_B1"
D G "MCR_STROBE1" 13 14 "PIN_B2"
D G "MCR_DATA2" 13 15 "PIN_C5"
D G "MCR_STROBE2" 13 16 "PIN_B3"
D G "MCR_ERR_PARITY1" 13 22 "1"
D G "MCR_ERR_PARITY2" 13 23 "2"
D G "MCR_ERR_LRC1" 13 24 "4"
D G "MCR_ERR_LRC2" 13 25 "8"
D G "numbyteoftrack1" 13 27 "79"
D G "numbyteoftrack2" 13 28 "40"
D G "numbyteofbuffer1" 13 29 "850"
D G "numbyteofbuffer2" 13 30 "300"
V G "day" 13 33 "int8"
V G "year" 13 33 "int8"
V G "mon" 13 33 "int8"
V G "date" 13 33 "int8"
V G "h" 13 33 "int8"
V G "min" 13 33 "int8"
V G "sec" 13 33 "int8"
V G "Track1" 13 35 "int8[79]"
V G "Track2" 13 36 "int8[40]"
V G "buffertrack1" 13 38 "int8[850]"
V G "buffertrack2" 13 39 "int8[300]" "char temptrack1[numbyteofbuffer1];"
V G "mcr_timeout" 13 43 "int32"
V G "dir" 13 44 "int8"
V G "countbit_T1" 13 45 "int16"
V G "countbit_T2" 13 45 "int16"
V G "bug_countbit_T1" 13 46 "int16"
V G "bug_countbit_T2" 13 46 "int16"
V G "card_timeout" 13 47 "int16"
V G "countbit" 13 48 "int16"
V G "datinbuf" 13 49 "int8"
V G "debugmode" 13 50 "int8"
V G "cardread_st" 13 51 "int8"
V G "saving_flag" 13 52 "int8"
V G "data_avai" 13 53 "int8"
V G "reading_fg" 13 54 "int8"
V G "count_reading_error" 13 55 "int8"
V L "bit7" 13 57 "int8"
V L "bit6" 13 57 "int8"
V L "bit5" 13 57 "int8"
V L "bit4" 13 57 "int8"
V L "bit3" 13 57 "int8"
V L "bit2" 13 57 "int8"
V L "bit1" 13 57 "int8"
V L "bit0" 13 57 "int8"
F G "makebyte" 13 57 "int8(int8 bit7,int8 bit6,int8 bit5,int8 bit4,int8 bit3,int8 bit2,int8 bit1,int8 bit0)"
V L "temp" 13 59 "int8"
V L "direct" 13 64 "int8"
V L "offset" 13 64 "int16"
V L "datain" 13 64 "*int8"
F G "check_lrc_T1" 13 64 "int8(int8 direct,int16 offset,*int8 datain)"
V L "temp" 13 66 "int8"
V L "direct" 13 81 "int8"
V L "offset" 13 81 "int16"
V L "datain" 13 81 "*int8"
F G "check_lrc_T2" 13 81 "int8(int8 direct,int16 offset,*int8 datain)"
V L "temp" 13 83 "int8"
V L "track" 13 98 "int8"
V L "end_point" 13 98 "int16"
V L "datin" 13 98 "*int8"
F G "detect_pos_st" 13 98 "int16(int8 track,int16 end_point,*int8 datin)"
V L "i" 13 100 "int16"
V L "j" 13 100 "int16"
V L "temp" 13 101 "int8"
V L "temp1" 13 101 "int8"
V L "temp2" 13 101 "int8"
V L "CRC" 13 102 "int8"
C L "detect_pos_st" 13 2 3 "FUNCTION"
C L "detect_pos_st" 13 2 1 "FUNCTION"
C L "detect_pos_st" 13 2 1 "FUNCTION"
C L "detect_pos_st" 13 2 1 "FUNCTION"
C L "detect_pos_st" 13 2 6 "FUNCTION"
C L "detect_pos_st" 13 2 1 "FUNCTION"
C L "detect_pos_st" 13 2 7 "FUNCTION"
C L "detect_pos_st" 13 2 4 "FUNCTION"
C L "detect_pos_st" 13 2 1 "FUNCTION"
C L "detect_pos_st" 13 2 1 "FUNCTION"
C L "detect_pos_st" 13 2 1 "FUNCTION"
C L "detect_pos_st" 13 2 5 "FUNCTION"
C L "detect_pos_st" 13 2 4 "FUNCTION"
C L "detect_pos_st" 13 2 1 "FUNCTION"
C L "detect_pos_st" 13 2 5 "FUNCTION"
C L "detect_pos_st" 13 2 4 "FUNCTION"
C L "detect_pos_st" 13 2 1 "FUNCTION"
C L "detect_pos_st" 13 2 5 "FUNCTION"
V L "track" 13 256 "int8"
V L "countbit" 13 256 "int16"
V L "datin" 13 256 "*int8"
V L "datout" 13 256 "*int8"
F G "con_data_track" 13 256 "int8(int8 track,int16 countbit,*int8 datin,*int8 datout)"
V L "i" 13 258 "int8"
V L "j" 13 259 "int16"
V L "temp" 13 259 "int16"
F G "debug_reader" 13 304 "void()"
V L "i" 13 306 "int16"
C L "saving_card" 13 2 6 "FUNCTION"
F G "saving_card" 13 321 "void()"
V L "temp" 13 323 "int8"
V L "tempcount" 13 324 "int16" "fprintf(COM2,"\r\n");"
C L "saving_card" 13 337 2 "*"
C L "saving_card" 13 337 1 "FUNCTION"
C L "saving_card" 13 337 1 "FUNCTION"
C L "saving_card" 13 337 4 "FUNCTION"
C L "saving_card" 13 337 3 "FUNCTION"
C L "saving_card" 13 337 1 "FUNCTION"
C L "saving_card" 13 337 1 "FUNCTION"
C L "saving_card" 13 337 1 "FUNCTION"
C L "saving_card" 13 337 1 "FUNCTION"
C L "saving_card" 13 337 1 "FUNCTION"
C L "saving_card" 13 337 4 "FUNCTION"
C L "saving_card" 13 399 2 "*"
F G "saving_card_encrypt" 13 403 "void()"
V L "temp" 13 405 "int8"
V L "i" 13 405 "int8"
V L "j" 13 405 "int8"
V L "u" 13 405 "int8"
V L "countbyte" 13 406 "int8"
V L "tempcount" 13 407 "int16"
V L "carddata" 13 408 "int8[128]"
V L "encryptblock" 13 409 "int8[16]"
V L "tempkey" 13 410 "int8[16]"
C L "saving_card_encrypt" 13 422 1 "*"
C L "saving_card_encrypt" 13 422 1 "FUNCTION"
C L "saving_card_encrypt" 13 422 1 "FUNCTION"
C L "saving_card_encrypt" 13 422 4 "FUNCTION"
C L "saving_card_encrypt" 13 422 2 "FUNCTION"
C L "saving_card_encrypt" 13 422 4 "FUNCTION"
C L "saving_card_encrypt" 13 521 2 "*"
F G "mcr_read" 13 525 "int8()"
V L "ST1" 13 527 "int8"
V L "ST1_old" 13 528 "int8"
V L "ST2" 13 529 "int8"
V L "ST2_old" 13 530 "int8"
V L "Bit_t2" 13 531 "int8"
V L "error_T1" 13 532 "int8"
V L "error_T2" 13 533 "int8"
V L "i" 13 534 "int16" "Loop until a card is not present"
C L "mcr_read" 13 521 1 "FUNCTION"
C L "mcr_read" 13 548 1 "*"
C L "mcr_read" 13 548 2 "FUNCTION"
C L "mcr_read" 13 548 1 "FUNCTION"
C L "mcr_read" 13 548 2 "FUNCTION"
C L "mcr_read" 13 548 3 "FUNCTION"
C L "mcr_read" 13 570 1 "*"
C L "mcr_read" 13 570 1 "FUNCTION"
C L "mcr_read" 13 570 4 "FUNCTION"
C L "mcr_read" 13 587 1 "*"
C L "mcr_read" 13 596 1 "*"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 3 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
C L "mcr_read" 13 596 2 "FUNCTION"
C L "mcr_read" 13 596 1 "FUNCTION"
F G "read_card_T1" 13 662 "void()"
D G "LOGOFF" 14 2 "0"
D G "LOGON" 14 3 "1"
D G "get_data" 14 4 "2"
D G "changer_pass" 14 5 "3"
V G "mode" 14 8 "int8"
V G "ee_dat" 14 9 "int8"
V G "count_card" 14 10 "int16"
V G "count_card_tg" 14 10 "int16"
V G "mode_sl" 14 11 "int8"
V G "addr_key" 14 12 "int32"
V G "console" 14 13 "int8[16]" ""
F G "rstfact" 14 15 "void()"
C L "rstfact" 14 18 2 "FUNCTION"
F G "downloaddataregular" 14 24 "void()"
V L "index" 14 26 "int8"
V L "i" 14 26 "int8"
V L "adr" 14 27 "int16"
V L "countchar" 14 28 "int16"
V L "temp" 14 29 "int8[50]"
C L "downloaddataregular" 14 18 1 "FUNCTION"
F G "downloaddataEncrypt" 14 84 "void()"
V L "i" 14 86 "int8"
V L "adr" 14 87 "int16"
V L "countchar" 14 88 "int16"
V L "keydatatemp" 14 89 "int8[16]"
C L "downloaddataEncrypt" 14 18 1 "FUNCTION"
C L "downloaddataEncrypt" 14 18 1 "FUNCTION"
F G "adminmode" 14 119 "void()"
V L "index" 14 121 "int8"
V L "i" 14 121 "int8"
V L "countchar" 14 122 "int16"
V L "temp" 14 123 "int8[50]" "printf("Admin>");"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 2 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 18 10 "FUNCTION"
C L "adminmode" 14 18 1 "FUNCTION"
C L "adminmode" 14 286 10 "*"
C L "adminmode" 14 286 1 "FUNCTION"
C L "adminmode" 14 286 1 "FUNCTION"
C L "adminmode" 14 286 1 "FUNCTION"
F G "timer0" 0 15 "void()"
V L "buf" 0 17 "int16"
V L "temp" 0 18 "int8" "========strobe keyboarddata============"
C L "timer0" 0 22 1 "FUNCTION"
C L "timer0" 0 22 1 "FUNCTION"
C L "timer0" 0 22 1 "FUNCTION"
C L "timer0" 0 22 1 "FUNCTION"
C L "timer0" 0 22 1 "FUNCTION"
C L "timer0" 0 22 1 "FUNCTION"
C L "timer0" 0 22 1 "FUNCTION"
C L "timer0" 0 22 1 "FUNCTION"
C L "timer0" 0 22 1 "FUNCTION"
C L "timer0" 0 22 1 "FUNCTION"
F G "MAIN" 0 92 "void()"
V L "i" 0 94 "int8"
V L "temp" 0 94 "int8"
V L "count_char" 0 94 "int8"
V L "num_card" 0 95 "int16"
V L "cards" 0 95 "int16"
V L "countc" 0 95 "int16"
V L "count_dwla" 0 95 "int16"
V L "lastlen" 0 96 "int16"
V L "len" 0 97 "int16"
V L "addr_dat" 0 97 "int16"
V L "strl" 0 98 "int8"
V L "j" 0 98 "int8"
V L "string" 0 99 "int8[5]"
V L "buftemp" 0 99 "int8[124]"
V L "buftemp2" 0 99 "int8[50]"
C L "MAIN" 0 22 2 "FUNCTION"
C L "MAIN" 0 22 3 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 11 "FUNCTION"
C L "MAIN" 0 22 1 "FUNCTION"
C L "MAIN" 0 22 7 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "release_io" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "port_b_pullups" 1 0
F B "pin_select" 2 4
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_oscillator" 0 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "setup_rtc" 1 2
F B "setup_rtc_alarm" 3 0
F B "rtc_read" 1 0
F B "rtc_write" 1 0
F B "rtc_alarm_read" 1 0
F B "rtc_alarm_write" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
